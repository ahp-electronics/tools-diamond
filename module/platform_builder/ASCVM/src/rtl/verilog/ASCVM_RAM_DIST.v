// =============================================================================
//                           COPYRIGHT NOTICE
// Copyright 2011 (c) Lattice Semiconductor Corporation
// ALL RIGHTS RESERVED
// This confidential and proprietary software may be used only as authorised by
// a licensing agreement from Lattice Semiconductor Corporation.
// The entire notice above must be reproduced on all authorized copies and
// copies may only be made to the extent permitted by a licensing agreement from
// Lattice Semiconductor Corporation.
//
// Lattice Semiconductor Corporation       TEL  : 1-800-Lattice (USA and Canada)
// 5555 NE Moore Court                            503-268-8001 (other locations)
// Hillsboro, OR 97124                     web  : http://www.latticesemi.com/
// U.S.A                                   email: techsupport@latticesemi.com
// =============================================================================
//                         FILE DETAILS         
// Project               : Platform Manager 2
// File                  : ASCVM_RAM_DIST.v
// Title                 : Usage defined macros for Analog Sense and Control Virtual Machine
// Dependencies          : Supports ASCVM.v & ASCVM_DATAPATH.v.
//                       : 
// Description           : Distributed RAM for ASCVM for RDAT/WDAT Storage.
// =============================================================================
//                        REVISION HISTORY
// Version               : 0.1
// Changes Made          : Initial Release
// Author(s)             : Dan Sides
// Mod. Date             : Feb 2012
// =============================================================================
/* Verilog netlist generated by SCUBA Diamond_1.4_Alpha (20) */
/* Module Version: 3.5 */
/* /tools/dist/lattice/DIAMOND/latest/ispfpga/bin/lin/scuba -w -lang verilog -synth synplify -bus_exp 7 -bb -arch xo2c00 -type sspram -addr_width 3 -num_rows 6 -data_width 16 -outData REGISTERED -e  */
/* Fri Oct 21 16:08:30 2011 */


`timescale 1 ns / 1 ps
module ASCVM_RAM_DIST (Address, Data, Clock, WE, ClockEn, Reset, Q);
    input wire [2:0] Address;
    input wire [15:0] Data;
    input wire Clock;
    input wire WE;
    input wire ClockEn;
    input wire Reset;
    output wire [15:0] Q;

    wire scuba_vhi;
    wire dataout15_ffin;
    wire dataout14_ffin;
    wire dataout13_ffin;
    wire dataout12_ffin;
    wire dataout11_ffin;
    wire dataout10_ffin;
    wire dataout9_ffin;
    wire dataout8_ffin;
    wire dataout7_ffin;
    wire dataout6_ffin;
    wire dataout5_ffin;
    wire dataout4_ffin;
    wire dataout3_ffin;
    wire dataout2_ffin;
    wire dataout1_ffin;
    wire dataout0_ffin;
    wire dec0_wre3;
    wire scuba_vlo;

    VHI scuba_vhi_inst (.Z(scuba_vhi));

    defparam LUT4_0.initval =  16'h8000 ;
    ROM16X1A LUT4_0 (.AD3(WE), .AD2(ClockEn), .AD1(scuba_vhi), .AD0(scuba_vhi), 
        .DO0(dec0_wre3));

    FD1P3DX FF_15 (.D(dataout15_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[15]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_14 (.D(dataout14_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[14]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_13 (.D(dataout13_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[13]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_12 (.D(dataout12_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[12]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_11 (.D(dataout11_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[11]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_10 (.D(dataout10_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[10]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_9 (.D(dataout9_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[9]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_8 (.D(dataout8_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[8]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_7 (.D(dataout7_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[7]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_6 (.D(dataout6_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[6]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_5 (.D(dataout5_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[5]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_4 (.D(dataout4_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[4]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_3 (.D(dataout3_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[3]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_2 (.D(dataout2_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[2]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_1 (.D(dataout1_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[1]))
             /* synthesis GSR="ENABLED" */;

    FD1P3DX FF_0 (.D(dataout0_ffin), .SP(ClockEn), .CK(Clock), .CD(Reset), 
        .Q(Q[0]))
             /* synthesis GSR="ENABLED" */;

    defparam mem_0_0.initval = "0x0000000000000000" ;
    SPR16X4C mem_0_0 (.DI0(Data[12]), .DI1(Data[13]), .DI2(Data[14]), .DI3(Data[15]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(Address[0]), .AD1(Address[1]), 
        .AD2(Address[2]), .AD3(scuba_vlo), .DO0(dataout12_ffin), .DO1(dataout13_ffin), 
        .DO2(dataout14_ffin), .DO3(dataout15_ffin))
             /* synthesis MEM_INIT_FILE="(0-5)(0-3)" */
             /* synthesis MEM_LPC_FILE="ASCVM_RAM_DIST.lpc" */
             /* synthesis COMP="mem_0_0" */;

    defparam mem_0_1.initval = "0x0000000000000000" ;
    SPR16X4C mem_0_1 (.DI0(Data[8]), .DI1(Data[9]), .DI2(Data[10]), .DI3(Data[11]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(Address[0]), .AD1(Address[1]), 
        .AD2(Address[2]), .AD3(scuba_vlo), .DO0(dataout8_ffin), .DO1(dataout9_ffin), 
        .DO2(dataout10_ffin), .DO3(dataout11_ffin))
             /* synthesis MEM_INIT_FILE="(0-5)(4-7)" */
             /* synthesis MEM_LPC_FILE="ASCVM_RAM_DIST.lpc" */
             /* synthesis COMP="mem_0_1" */;

    defparam mem_0_2.initval = "0x0000000000000000" ;
    SPR16X4C mem_0_2 (.DI0(Data[4]), .DI1(Data[5]), .DI2(Data[6]), .DI3(Data[7]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(Address[0]), .AD1(Address[1]), 
        .AD2(Address[2]), .AD3(scuba_vlo), .DO0(dataout4_ffin), .DO1(dataout5_ffin), 
        .DO2(dataout6_ffin), .DO3(dataout7_ffin))
             /* synthesis MEM_INIT_FILE="(0-5)(8-11)" */
             /* synthesis MEM_LPC_FILE="ASCVM_RAM_DIST.lpc" */
             /* synthesis COMP="mem_0_2" */;

    VLO scuba_vlo_inst (.Z(scuba_vlo));

    defparam mem_0_3.initval = "0x0000000000000000" ;
    SPR16X4C mem_0_3 (.DI0(Data[0]), .DI1(Data[1]), .DI2(Data[2]), .DI3(Data[3]), 
        .CK(Clock), .WRE(dec0_wre3), .AD0(Address[0]), .AD1(Address[1]), 
        .AD2(Address[2]), .AD3(scuba_vlo), .DO0(dataout0_ffin), .DO1(dataout1_ffin), 
        .DO2(dataout2_ffin), .DO3(dataout3_ffin))
             /* synthesis MEM_INIT_FILE="(0-5)(12-15)" */
             /* synthesis MEM_LPC_FILE="ASCVM_RAM_DIST.lpc" */
             /* synthesis COMP="mem_0_3" */;



    // exemplar begin
    // exemplar attribute FF_15 GSR ENABLED
    // exemplar attribute FF_14 GSR ENABLED
    // exemplar attribute FF_13 GSR ENABLED
    // exemplar attribute FF_12 GSR ENABLED
    // exemplar attribute FF_11 GSR ENABLED
    // exemplar attribute FF_10 GSR ENABLED
    // exemplar attribute FF_9 GSR ENABLED
    // exemplar attribute FF_8 GSR ENABLED
    // exemplar attribute FF_7 GSR ENABLED
    // exemplar attribute FF_6 GSR ENABLED
    // exemplar attribute FF_5 GSR ENABLED
    // exemplar attribute FF_4 GSR ENABLED
    // exemplar attribute FF_3 GSR ENABLED
    // exemplar attribute FF_2 GSR ENABLED
    // exemplar attribute FF_1 GSR ENABLED
    // exemplar attribute FF_0 GSR ENABLED
    // exemplar attribute mem_0_0 MEM_INIT_FILE (0-5)(0-3)
    // exemplar attribute mem_0_0 MEM_LPC_FILE ASCVM_RAM_DIST.lpc
    // exemplar attribute mem_0_0 COMP mem_0_0
    // exemplar attribute mem_0_1 MEM_INIT_FILE (0-5)(4-7)
    // exemplar attribute mem_0_1 MEM_LPC_FILE ASCVM_RAM_DIST.lpc
    // exemplar attribute mem_0_1 COMP mem_0_1
    // exemplar attribute mem_0_2 MEM_INIT_FILE (0-5)(8-11)
    // exemplar attribute mem_0_2 MEM_LPC_FILE ASCVM_RAM_DIST.lpc
    // exemplar attribute mem_0_2 COMP mem_0_2
    // exemplar attribute mem_0_3 MEM_INIT_FILE (0-5)(12-15)
    // exemplar attribute mem_0_3 MEM_LPC_FILE ASCVM_RAM_DIST.lpc
    // exemplar attribute mem_0_3 COMP mem_0_3
    // exemplar end

endmodule
