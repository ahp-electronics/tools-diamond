var pairs =
{
"inferring":{"memory":1,"rom":1}
,"case":{"statements":1,"statement":1,"addr":1}
,"code":{"rom":1}
,"rom":{"inferred":1,"case":1,"implemented":1,"consider":1,"data":1}
,"inferred":{"following":1,"case":1,"statement":1}
,"define":{"rom":1}
,"statement":{"equivalent":1,"verilog":1,"vhdl":1}
,"equivalent":{"statements":1}
,"assign":{"constant":1,"values":1}
,"constant":{"values":1}
,"values":{"width":1,"least":1}
,"least":{"addresses":1,"assigned":1}
,"addresses":{"half":1}
,"half":{"address":1}
,"address":{"space":1,"bits":1}
,"space":{"whichever":1,"words":1}
,"whichever":{"greater":1}
,"greater":{"example":1}
,"example":{"address":1}
,"bits":{"address":1}
,"words":{"least":1}
,"assigned":{"values":1}
,"control":{"rom":1}
,"implemented":{"distributed":1}
,"distributed":{"block":1}
,"block":{"rom":1}
,"consider":{"adding":1}
,"adding":{"syn_romstyle":1}
,"syn_romstyle":{"attribute":1}
,"attribute":{"syn_romstyle":1}
,"module":{"rom":1}
,"data":{"addr":1,"\u0027h4":1,"\u0027h9":1,"\u0027h1":1,"\u0027h8":1,"\u0027h0":1,"std_logic_vector":1,"0100":1,"1001":1,"0001":1,"1000":1,"0000":1}
,"output":{"3:0":1}
,"3:0":{"data":1}
,"input":{"4:0":1}
,"4:0":{"addr":1}
,"always":{"addr":1}
,"addr":{"begin":1,"std_logic_vector":1,"data":1}
,"default":{"data":1}
,"entity":{"rom":1}
,"port":{"addr":1}
,"std_logic_vector":{"downto":1}
,"end":{"rom":1,"process":1,"behave":1}
,"architecture":{"behave":1}
,"behave":{"rom":1}
,"process":{"addr":1}
,"elsif":{"addr":1}
,"else":{"data":1}
}
;Search.control.loadWordPairs(pairs);
