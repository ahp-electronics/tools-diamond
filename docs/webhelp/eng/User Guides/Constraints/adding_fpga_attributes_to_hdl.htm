<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Adding FPGA Attributes to HDL</title><link rel="Prev" href="export_all_ssv_preferences.htm" title="Previous" /><link rel="Next" href="design_imp_1.12.185.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/design_imp_1.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pzfsYM8bbu891_002fUIOPfW1lQ" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/User%20Guides/Constraints/adding_fpga_attributes_to_hdl.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Getting%20Startred/Getting_Started.htm">User Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Applying_Design_Constraints.htm#1308538">Applying Design Constraints</a> &gt; Adding FPGA Attributes to HDL</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h2 id="ww1308538" class="Heading1"><span></span>Adding FPGA Attributes to HDL</h2><p id="ww1135187" class="BodyAfterHead"><span></span>HDL<span class="Hyperlink"><a href="../../Reference%20Guides/Constraints%20Ref/hdl_attributes.htm#ww1270828" title="HDL Attributes"> attributes</a></span> that you specify in the source code are passed through logic synthesis into the EDIF netlist. The Translate Design process passes them to the native generic database (.ngd), and they are finally extracted or interpreted by the Map Design process (design mapper). Most attributes are extracted by the mapper and are written into the SCHEMATIC START/END section of the project's physical preference file (.prf). These are then used by PAR to update the native circuit description (.ncd). Some attributes, such as IO_TYPE, are interpreted directly by the mapper and are applied as part of the physical design file (.ncd) output.</p><p id="ww1079193" class="Body"><span></span>To pass FPGA attributes to your EDIF netlist, use a synthesis tool. When edif2ngd reads the EDIF file, the attributes become part of the FPGA database. </p><p id="ww1079194" class="BodyAfterHead"><span></span>The examples that follow show how the HDL code appears with an attached attribute and how the FPGA attributes appear in an EDIF netlist.</p><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1079197" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1079199" class="CellBody"><span></span>Editing the EDIF file directly is not recommended in most cases, because the attributes should be present in the original HDL design in order to maintain design integrity. If you edit the EDIF file, it will no longer match the HDL. Consequently, design adjustments that you make later in the design flow will be compromised. When you re-synthesize your design, the edited EDIF files are overwritten. For test purposes, you might want to edit the EDIF file and run it through the flow. An example is provided here that shows where attributes occur in the resulting EDIF output.</div></td></tr></table></div><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption class="FigureTitle" style="caption-side: top"><div id="ww1079202" class="FigureTitle">Example 1 - Verilog Using Synplify</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 337.49928pt"><pre id="ww1079204" class="Code">IB I_0 (.I(I[0]), .O(X[0])) /* synthesis IO_TYPE="LVDS" */ /* synthesis PULLMODE="NONE" */ ;</pre></td></tr></table></div><p id="ww1079206" class="Body"><span></span>The input buffer (IB) element is instantiated with an IO_TYPE attribute with a value of “LVDS,” which specifies the buffer type. The attributes are specified at the instance line before the semicolon.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption class="FigureTitle" style="caption-side: top"><div id="ww1079209" class="FigureTitle">Example 2 - Verilog Using Precision</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1079211" class="Code">&nbsp;&nbsp;IB I_0 (.I(I[0]), .O(X[0]));</pre><pre id="ww1079212" class="Code">&nbsp;&nbsp;...</pre><pre id="ww1079213" class="Code">&nbsp;</pre><pre id="ww1079214" class="Code">&nbsp;&nbsp;// pragma begin</pre><pre id="ww1079215" class="Code">&nbsp;&nbsp;// pragma attribute IO_TYPE LVDS</pre><pre id="ww1079216" class="Code">&nbsp;&nbsp;// pragma attribute I_0 PULLMODE NONE</pre><pre id="ww1079217" class="Code">&nbsp;&nbsp;// pragma end</pre><pre id="ww1079218" class="Code">endmodule</pre></td></tr></table></div><p id="ww1079219" class="Body"><span></span>The attributes for all the instantiations are specified at the end just before endmodule.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption class="FigureTitle" style="caption-side: top"><div id="ww1079222" class="FigureTitle">Example 3 - VHDL Output</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1079224" class="Code">attribute IO_TYPE : string;</pre><pre id="ww1079225" class="Code">attribute PULLMODE : string;</pre><pre id="ww1079226" class="Code">attribute IO_TYPE of I_0 : label is "LVDS";</pre><pre id="ww1079227" class="Code">attribute PULLMODE of I_0 : label is "NONE";</pre><pre id="ww1079228" class="Code">...</pre><pre id="ww1079229" class="Code">I_0 : IB</pre><pre id="ww1079230" class="Code">&nbsp;&nbsp;port map (I =&gt; I(0),</pre><pre id="ww1079231" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;O =&gt; X(0));</pre></td></tr></table></div><p id="ww1079232" class="Body"><span></span>The attributes are defined and specified in the architecture declaration section. The VHDL syntax is the same for Synplify and Precision.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption class="FigureTitle" style="caption-side: top"><div id="ww1079235" class="FigureTitle">Example 4 - EDIF Netlist</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1079237" class="Code">(instance IZ0Z_0 (viewRef verilog (cellRef IB))</pre><pre id="ww1079238" class="Code">(property IO_TYPE (string "LVDS"))</pre><pre id="ww1079239" class="Code">(property PULLMODE (string "NONE"))</pre></td></tr></table></div><p id="ww1079240" class="Body"><span></span>The input buffer (IB) element in Example 2 shows how it would appear in an EDIF netlist. Notice that the attribute appears enclosed in parentheses in the following format below the instance line: </p><p id="ww1079241" class="Body"><span></span>(property &lt;<em class="Emphasis">attribute</em>&gt; (string “&lt;<em class="Emphasis">parameter</em>&gt;”))</p><h5 id="ww1079242" class="HeadingRunIn"><span></span>See Also</h5><div id="ww1222864" class="Portal"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span><span class="Hyperlink"><a href="../../Reference%20Guides/FPGA%20Libraries/about_library.htm#ww1434710" title="FPGA Libraries Reference Guide">FPGA Libraries Reference Guide</a></span></div><div id="ww1606536" class="Portal" style="vertical-align: baseline"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span><span class="Hyperlink"><a href="../../../../synpbase/doc/user_guide.pdf" target="_blank">Synplify Pro for Lattice User Guide</a></span></div><div id="ww1569356" class="Portal" style="vertical-align: baseline"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span><span class="Hyperlink"><a href="../../../../../synpbase/doc/reference.pdf" target="_blank">Synplify Pro for Lattice Reference Manual</a></span></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>