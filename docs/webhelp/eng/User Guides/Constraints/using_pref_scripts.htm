<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Using Preference Scripts</title><link rel="Prev" href="using_wildcards_in_prefs.htm" title="Previous" /><link rel="Next" href="generating_preferences_from_synthesis_tools.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/design_imp_1.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pIxjL2bcDCj62m3gTDF3pSg" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/User%20Guides/Constraints/using_pref_scripts.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Getting%20Startred/Getting_Started.htm">User Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Applying_Design_Constraints.htm#1106950">Applying Design Constraints</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="setting_preferences.htm#1106950">Setting Preferences</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="setting_preferences_in_text_editor.htm#1106950">Setting Preferences in a Text Editor</a> &gt; Using Preference Scripts</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1106950" class="Heading3"><span></span>Using Preference Scripts</h4><p id="ww1106951" class="BodyAfterHead"><span></span>Preference scripts enable you to set preferences conditionally and maintain multiple sets of preferences for different device families. A script enables you to define symbols and set specific values using <span class="Hyperlink"><a href="../../User%20Guides/Constraints/using_pref_scripts.htm#ww1107071" title="Using Preference Scripts">constant expressions </a></span>for such things as temperatures and frequencies. It also allows you to use <span class="Hyperlink"><a href="../../User%20Guides/Constraints/using_pref_scripts.htm#ww1107146" title="Using Preference Scripts">arithmetical expressions</a></span>.</p><p id="ww1106954" class="Body"><span></span>The script commands in the .lpf file are interpreted at map time, and only the appropriate commands are used by map and written into the .prf file. To see how the tools are interpreting the script, examine the .prf file.</p><p id="ww1106955" class="BodyAfterHead"><span></span>When you use a preference script, most editing should be done with a text editor instead of the Diamond preference views. The preference views should be used mainly to examine the design.</p><h5 id="ww1106957" class="HeadingRunIn"><span></span>Defining Symbols</h5><p id="ww1106958" class="Body"><span></span>Defined symbols enable you to determine which preferences are to be used in the preference file.</p><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1106961" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1106963" class="CellBody"><span></span>Symbol names are case-sensitive.</div></td></tr></table></div><p id="ww1106969" class="Body"><span></span>Use the @define keyword and a variable name.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1106968" class="Code"><code class="Code">@define $&lt;variable_name&gt;;</code></pre></td></tr></table></div><p id="ww1106970" class="Body"><span></span>The dollar sign character must prefix the variable name. The variable name can start with any of the following characters:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1106975" class="Code">A-Z a-z $ _ * [ ] / . \ : { } ( ) ?</pre></td></tr></table></div><p id="ww1106976" class="Body"><span></span>The remaining part of the variable name can contain any of the following characters:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1106981" class="Code">0-9 A-Z a-z , $ _ * [ ] / . \ : { } + - ? ^ ( )</pre></td></tr></table></div><h5 id="ww1106982" class="HeadingRunIn"><span></span>Testing for Defined Symbols</h5><p id="ww1106983" class="Body"><span></span>Use the defined symbols and the @ifdef keyword to determine which preferences are to be used in the preference file:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1106988" class="Code">@ifdef $&lt;variable_name&gt; ;</pre><pre id="ww1106989" class="Code">&nbsp;&nbsp;&lt;preferences&gt; </pre><pre id="ww1106990" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1106991" class="Body"><span></span>If the symbol has been defined earlier in the preference file, all preferences between @ifdef and @endif will be considered valid. If the symbol has not been defined, the preferences will be ignored.</p><p id="ww1106999" class="Body"><span></span>Use the @ifndef keyword to test for the nonexistence of a symbol:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1106996" class="Code">@ifndef $&lt;variable_name&gt; ;</pre><pre id="ww1106997" class="Code">&nbsp;&nbsp;&lt;preferences&gt; </pre><pre id="ww1106998" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107000" class="Body"><span></span>This works in the same way as @ifdef, except that the condition is true if the symbol has <span style="font-style: italic">not</span> been defined earlier in the preference file.</p><p id="ww1107001" class="Body"><span></span>Another keyword, @else, can be used after @ifdef or @ifndef to specify an alternate set of preferences when the first condition is not met:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107006" class="Code">@ifdef $&lt;variable_name&gt; ;</pre><pre id="ww1107007" class="Code">&nbsp;&nbsp;&lt;preferences&gt; </pre><pre id="ww1107008" class="Code">@else ;</pre><pre id="ww1107009" class="Code">&nbsp;&nbsp;&lt;alternate_preferences&gt;</pre><pre id="ww1107010" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107011" class="Body"><span></span>Tests using @ifdef and @ifndef can be nested to any level.</p><h5 id="ww1107012" class="HeadingRunIn"><span></span>Examples Using Defined Symbols</h5><p id="ww1107013" class="Body"><span></span>In the following example, the symbol DEBUG is defined, and it is followed by the @ifdef keyword and a LOCATE preference. Because DEBUG has been defined, the LOCATE preference is used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107018" class="Code">@define $DEBUG ;</pre><pre id="ww1107019" class="Code">@ifdef $DEBUG ;</pre><pre id="ww1107020" class="Code">&nbsp;&nbsp;LOCATE COMP “in” SITE R29C4B ;</pre><pre id="ww1107021" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107022" class="Body"><span></span>In this next example, the LOCATE preference is not used, because the DEBUG symbol is not defined:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107027" class="Code">@ifdef $DEBUG ;</pre><pre id="ww1107028" class="Code">&nbsp;&nbsp;LOCATE COMP “in” SITE R29C4B;</pre><pre id="ww1107029" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107030" class="Body"><span></span>In the following example, the symbol DEBUG is defined. However, the LOCATE preference will not be used, because the test is for DEBUG <span style="font-style: italic">not</span> being defined.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107035" class="Code">@define $DEBUG;</pre><pre id="ww1107036" class="Code">&nbsp;</pre><pre id="ww1107037" class="Code">@ifndef $DEBUG ;</pre><pre id="ww1107038" class="Code">&nbsp;&nbsp;LOCATE COMP “in” SITE R29C4B ;</pre><pre id="ww1107039" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107040" class="Body"><span></span>In the following example, the symbol DEBUG is defined. As as result, the second LOCATE preference after the @else keyword is used, because the @ifndef DEBUG fails.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107045" class="Code">@define $DEBUG ;</pre><pre id="ww1107046" class="Code">&nbsp;</pre><pre id="ww1107047" class="Code">@ifndef $DEBUG ;</pre><pre id="ww1107048" class="Code">&nbsp;&nbsp;LOCATE COMP “in” SITE R29C4B ;</pre><pre id="ww1107049" class="Code">@else ;</pre><pre id="ww1107050" class="Code">&nbsp;&nbsp;LOCATE COMP “in” SITE R30C10B ;</pre><pre id="ww1107051" class="Code">@endif ;</pre></td></tr></table></div><h5 id="ww1107052" class="HeadingRunIn"><span></span>Example Using Nested Preferences</h5><p id="ww1107053" class="Body"><span></span>The following example includes a nested FREQUENCY preference. Because both DEBUG and HIGHSPEED are defined, the frequency of the net “clk” will be set to 500.0000 MHz.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107058" class="Code">@define $DEBUG ;</pre><pre id="ww1107059" class="Code">@define $HIGHSPEED ;</pre><pre id="ww1107060" class="Code">&nbsp;</pre><pre id="ww1107061" class="Code">@ifdef $DEBUG ;</pre><pre id="ww1107062" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;@ifdef $HIGHSPEED ;</pre><pre id="ww1107063" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FREQUENCY net “clk” 500.0000 MHz ;</pre><pre id="ww1107064" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;@else ;</pre><pre id="ww1107065" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FREQUENCY NET “clk” 250.0000 MHz ;</pre><pre id="ww1107066" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;@endif ;</pre><pre id="ww1107067" class="Code">@else ;</pre><pre id="ww1107068" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;FREQUENCY NET “clk” 250.0000 MHz ;</pre><pre id="ww1107069" class="Code">@endif ;</pre></td></tr></table></div><h5 id="ww1107071" class="HeadingRunIn"><span></span>Using Constant Expressions</h5><p id="ww1107072" class="BodyAfterHead"><span></span>Constant expressions enable you to set a specific value for a defined symbol. You can then test the value using conditional expressions. The same @define keyword is used, but it is associated with a constant value.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107077" class="Code">@define $&lt;variable_name&gt; &lt;constant_value&gt; ;</pre></td></tr></table></div><p id="ww1107078" class="Body"><span></span>The constant value can be any integer or floating point number that is within the range supported for numeric values. The value can also be a string that is within the preference naming limitations. The variable can have a string or numeric value, but not both. See <span class="Hyperlink"><a href="../../User%20Guides/Constraints/preference_syntax_guidelines_conventions.htm#ww1111999" title="Preference Syntax Guidelines and Conventions">Preference Syntax Guidelines and Conventions</a></span>. </p><h5 id="ww1107080" class="HeadingRunIn"><span></span>Testing for Constant Expressions</h5><p id="ww1107081" class="Body"><span></span>You can test a symbol for its value as well as its definition by using the @ifdef and @ifndef keywords:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107086" class="Code">@ifdef $&lt;constant_compare_expression&gt; ;</pre><pre id="ww1107087" class="Code">&nbsp;&nbsp;&lt;preferences&gt;</pre><pre id="ww1107088" class="Code">@else ;</pre><pre id="ww1107089" class="Code">&nbsp;&nbsp;&lt;alternate_preferences&gt;</pre><pre id="ww1107090" class="Code">@endif ;</pre><pre id="ww1107091" class="Code">&nbsp;</pre><pre id="ww1107092" class="Code">@ifndef &lt;constant_compare_expression&gt; ;</pre><pre id="ww1107093" class="Code">&nbsp;&nbsp;&lt;preferences&gt;</pre><pre id="ww1107094" class="Code">@else ;</pre><pre id="ww1107095" class="Code">&nbsp;&nbsp;&lt;alternate_preferences&gt;</pre><pre id="ww1107096" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107102" class="Body"><span></span>The constant compare expression supports a variety of tests:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 320.99976pt"><pre id="ww1107101" class="Code">&lt;constant_compare_expression&gt; := <br />&nbsp;&nbsp;&lt;variable_name&gt; &gt; | &gt;= | = | == | &lt; | &lt;= &lt;constant_value&gt;</pre></td></tr></table></div><p id="ww1107103" class="Body"><span></span>After defining a symbol with a constant expression, you can use the defined constant in place of a numerical value in the preference by prefixing ‘$’ to the variable name.</p><h5 id="ww1107104" class="HeadingRunIn"><span></span>Examples Using Constant Expressions</h5><p id="ww1107105" class="Body"><span></span>In the following example, the symbol MAX_FREQ is defined as 1. The script tests whether MAX_FREQ is equal to 1. Because the test passes, the first FREQUENCY PORT preference is used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107110" class="Code">@define $MAX_FREQ 1 ;</pre><pre id="ww1107111" class="Code">&nbsp;</pre><pre id="ww1107112" class="Code">@if $MAX_FREQ = 1 ;</pre><pre id="ww1107113" class="Code">&nbsp;&nbsp;FREQUENCY PORT clk1 200 MHz ;</pre><pre id="ww1107114" class="Code">@else ;</pre><pre id="ww1107115" class="Code">&nbsp;&nbsp;FREQUENCY PORT clk1 100 MHz ;</pre><pre id="ww1107116" class="Code">@endif ;</pre></td></tr></table></div><p id="ww1107117" class="Body"><span></span>Variables can also be used to substitute for parameters in preferences. In the following example, the symbols <code class="Code">temp</code> and <code class="Code">freq</code> are defined. </p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107122" class="Code">@define $temp 100.000000 ;</pre><pre id="ww1107123" class="Code">@define $freq 150.000000 ;</pre><pre id="ww1107124" class="Code">TEMPERATURE $temp C ;</pre><pre id="ww1107125" class="Code">FREQUENCY NET “clk_c” $freq MHz ;</pre></td></tr></table></div><p id="ww1107132" class="Body"><span></span>After mapping, the .prf file will contain the following preferences:</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107130" class="Code">TEMPERATURE 100.000000 C ;</pre><pre id="ww1107131" class="Code">FREQUENCY NET “clk_c” 150.000000 MHz ;</pre></td></tr></table></div><p id="ww1107144" class="Body"><span></span>In this next example, BITPATTERN<code class="Code"> </code>is defined as a string value.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107137" class="Code">@define $BITPATTERN “"01010011011001010110110101101001” ;</pre><pre id="ww1107138" class="Code">USERCODE BIN $BITPATTERN ;</pre></td></tr></table></div><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1107141" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1107143" class="CellBody"><span></span>Currently, USERCODE is the only preference that can use a variable defined as a string. </div></td></tr></table></div><h5 id="ww1107146" class="HeadingRunIn"><span></span>Using Arithmetical Expressions</h5><p id="ww1107147" class="Body"><span></span>You can use arithmetical expressions with @define, @ifdef, and @ifndef. The usual precedence of operations, from highest to lowest, is supported:</p><div id="ww1107153" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>expressions in parentheses</div><div class="ww_skin_page_overflow"><table class="NoteIndented" cellspacing="0" summary=""><caption class="NoteTitleIndented" style="caption-side: top"><div id="ww1107150" class="NoteTitleIndented">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1107152" class="CellBody"><span></span>A space must be placed inside each parenthesis.</div></td></tr></table></div><div id="ww1107154" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>multiplication and division ( * and / )</div><div id="ww1107155" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>addition and subtraction ( + and - )</div><div id="ww1107156" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>comparison operations ( &gt;, &lt;, &gt;=, &lt;=, = )</div><div id="ww1107157" class="Indented">The == symbol can also be used with @ifdef and @ifndef to test for equality.</div><h5 id="ww1107158" class="HeadingRunIn"><span></span>Examples Using Arithmetical Expressions</h5><p id="ww1107159" class="Body"><span></span>In the following example, A is defined as 10 and B is defined as 4. The @ifdef statement tests whether A plus 4 is greater than 10. Since this is true, the CLOCK_TO_OUT preference is used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107164" class="Code">@define $A 10.000000;</pre><pre id="ww1107165" class="Code">@define $B 4.000000;</pre><pre id="ww1107166" class="Code">&nbsp;</pre><pre id="ww1107167" class="Code"># TRUE: 14 &gt; 10</pre><pre id="ww1107168" class="Code">@ifdef $A + 4.000000 &gt; 10.000000;</pre><pre id="ww1107169" class="Code">CLOCK_TO_OUT PORT "speaker" 100.000000 ns MIN 100.000000 ns CLKNET "clk_c" CLKOUT PORT "speaker" ;</pre><pre id="ww1107170" class="Code">@endif;</pre></td></tr></table></div><p id="ww1107171" class="Body"><span></span>In the following example, the @ifdef statement tests whether A plus B is less than 10. Since this is false, the CLOCK_TO_OUT preference is not used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107176" class="Code">@define $A 10.000000;</pre><pre id="ww1107177" class="Code">@define $B 4.000000;</pre><pre id="ww1107178" class="Code">&nbsp;</pre><pre id="ww1107179" class="Code"># FALSE: 14 &lt; 10</pre><pre id="ww1107180" class="Code">@ifdef $A + $B &lt; 10.000000;</pre><pre id="ww1107181" class="Code">CLOCK_TO_OUT PORT "speaker" 900.000000 ns MIN 100.000000 ns CLKNET "clk_c" CLKOUT PORT "speaker" ;</pre><pre id="ww1107182" class="Code">@endif;</pre></td></tr></table></div><p id="ww1107183" class="Body"><span></span>In this next example, the comparison in the @ifdef statement utilizes parentheses that change the precedence so that 2 plus 4 is calculated first. Notice that a space is placed inside each parenthesis so that the expression will be parsed correctly. In the end, the expression is true, so the CLOCK_TO_OUT preference is used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107188" class="Code">@define $A 10.000000;</pre><pre id="ww1107189" class="Code">@define $B 4.000000;</pre><pre id="ww1107190" class="Code">&nbsp;</pre><pre id="ww1107191" class="Code"># TRUE: ( ( 6.000000 ) * 10.000000) / 2 &gt; 25, 30 &gt; 25</pre><pre id="ww1107192" class="Code">@ifdef ( ( 2.000000 + $B ) * $A ) / 2.000000 &gt; 25.000000;</pre><pre id="ww1107193" class="Code">CLOCK_TO_OUT PORT "speaker" 3000.000000 ns MIN 100.000000 ns CLKNET "clk_c" CLKOUT PORT "speaker" ;</pre><pre id="ww1107194" class="Code">@endif;</pre></td></tr></table></div><p id="ww1107195" class="Body"><span></span>The following example adds two new variables, G and H. The G variable is used in a comparison with 20, which is true, so the CLOCK_TO_OUT preference is used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107200" class="Code">@define $A 10.000000;</pre><pre id="ww1107201" class="Code">@define $B 4.000000;</pre><pre id="ww1107202" class="Code">@define $G $A + 10;</pre><pre id="ww1107203" class="Code">@define $H $G - $B;</pre><pre id="ww1107204" class="Code">&nbsp;</pre><pre id="ww1107205" class="Code">@ifdef $G == 20;</pre><pre id="ww1107206" class="Code">   CLOCK_TO_OUT PORT "speaker" 900.000000 ns MIN 100.000000 ns CLKNET "clk_c" CLKOUT PORT "speaker" ;</pre><pre id="ww1107207" class="Code">@endif;</pre></td></tr></table></div><p id="ww1107208" class="Body"><span></span>In this next example, H, which computes to 16, is used in a comparison with 20. Since H is less than 20, the CLOCK_TO_OUT preference is not used.</p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption style="caption-side: top"></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1107213" class="Code">@define $A 10.000000;</pre><pre id="ww1107214" class="Code">@define $B 4.000000;</pre><pre id="ww1107215" class="Code">@define $G $A + 10;</pre><pre id="ww1107216" class="Code">@define $H $G - $B;</pre><pre id="ww1107217" class="Code">&nbsp;</pre><pre id="ww1107218" class="Code">@ifdef $H &gt; 20;</pre><pre id="ww1107219" class="Code">   CLOCK_TO_OUT PORT "speaker" 1000.000000 ns MIN 100.000000 ns CLKNET "clk_c" CLKOUT PORT "speaker" ;</pre><pre id="ww1107220" class="Code">@endif;</pre></td></tr></table></div><h5 id="ww1107221" class="HeadingRunIn"><span></span>See Also</h5><div id="ww1107223" class="Portal" style="vertical-align: baseline"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span><span class="Hyperlink"><a href="../../Reference%20Guides/Constraints%20Ref/preference_descriptions.htm#ww1383543" title="Preferences">Preferences</a></span></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>