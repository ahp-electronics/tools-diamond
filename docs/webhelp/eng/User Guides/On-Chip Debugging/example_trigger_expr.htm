<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Example Trigger Expressions</title><link rel="Prev" href="trigger_expressions.htm" title="Previous" /><link rel="Next" href="Managing_Trigger_Expressions.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/la_inserter.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pyNGUt4jcZ4uooB29GX6bbA" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/User%20Guides/On-Chip%20Debugging/example_trigger_expr.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Getting%20Startred/Getting_Started.htm">User Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="debugging_on_chip.htm#1232140">Testing and Debugging On-Chip</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="creating_Reveal_modules.htm#1232140">Creating Reveal Modules</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="setting_trigger_expressions.htm#1232140">Setting Up Trigger Expressions</a> &gt; Example Trigger Expressions</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1232140" class="Heading3"><span></span>Example Trigger Expressions</h4><p id="ww1245210" class="BodyAfterHead"><span></span>Following is a series of examples that demonstrate the flexibility of trigger expressions.</p><h5 id="ww1245212" class="HeadingRunIn"><span></span>Example 1: Simplest Trigger Expression</h5><p id="ww1245213" class="BodyAfterHead"><span></span>Following is the simplest trigger expression:</p><p id="ww1245214" class="Body"><span></span>TU1</p><p id="ww1245215" class="Body"><span></span>This trigger expression is true, causing a trigger to occur when the TU1 trigger unit is matched. The value and operator for the trigger unit is defined in the trigger unit, not in the trigger expression.</p><h5 id="ww1245216" class="HeadingRunIn"><span></span>Example 2: Combinatorial Trigger Expression</h5><p id="ww1245217" class="BodyAfterHead"><span></span>An example of a combinatorial trigger expression is as follows:</p><p id="ww1245218" class="Body"><span></span>TU1 &amp; TU2 | TU3</p><p id="ww1245219" class="Body"><span></span>This trigger expression is true when (TU1 and TU2) or TU3 are matched. If no precedence ordering is specified, the order is left to right.</p><h5 id="ww1245220" class="HeadingRunIn"><span></span>Example 3: Combinatorial Trigger Expression with Precedence Ordering</h5><p id="ww1245221" class="BodyAfterHead"><span></span>In the following example of a combinatorial trigger expression, precedence makes a difference:</p><p id="ww1245222" class="Body"><span></span>TU1 &amp; (TU2 | TU3)</p><p id="ww1245223" class="Body"><span></span>This trigger expression gives different results than the previous one. In this case, the trigger expression is true if (TU1 and TU2) or (TU1 and TU3) are matched. </p><h5 id="ww1245224" class="HeadingRunIn"><span></span>Example 4: Simple Sequential Trigger Expression</h5><p id="ww1245225" class="BodyAfterHead"><span></span>Following is an example of a simple sequential trigger expression:</p><p id="ww1245226" class="Body"><span></span>TU1 THEN TU2</p><p id="ww1245227" class="Body"><span></span>This trigger expression looks for a match of TU1, then waits for a match on TU2 a minimum of one sample clock later. Since this expression uses a THEN statement, it is considered to have multiple sequences. The first sequence is “TU1,” since it must be matched first. The second sequence is “TU2,” because it is only checked for a match after the first sequence has been found. The “sequence depth” is therefore 2.</p><p id="ww1245228" class="Body"><span></span>The sequence depth is an important concept to understand for trigger expressions. Since the debug logic is inserted into the design, logic must be used to support the required sequence depth. Matching the depth to the entered expression can be used to minimize the logic. However, if you try to define a trigger expression that has a greater sequence depth than is available in the FPGA, an error will prevent the trigger expression from running. The dynamic capabilities of the trigger expression can therefore be limited. To allow more flexibility, you can specify the maximum sequence depth when you set up the debug logic in Reveal Inserter. You can reserve more room for the trigger expression than is required for the trigger expression currently entered. If you specify multiple trigger expressions, each trigger expression can have its own maximum sequence depth.</p><h5 id="ww1245229" class="HeadingRunIn"><span></span>Example 5: Mixed Combinatorial and Sequential Trigger Expression</h5><p id="ww1245230" class="BodyAfterHead"><span></span>Here is an example showing how you can mix combinatorial and sequential elements in a trigger expression:</p><p id="ww1245231" class="Body"><span></span>TU1 &amp; TU2 THEN TU3 THEN TU4 | TU5</p><p id="ww1245232" class="Body"><span></span>This trigger expression only generates a trigger if (TU1 AND TU2) match, then TU3 matches, then (TU4 or TU5) match. You can set precedence for any sequence, but not across sequences. The expression (TU1 &amp; TU2) | TU3 THEN TU4 is correct. The expression (TU1 &amp; TU2 THEN TU3) | TU4 is invalid and is not allowed.</p><h5 id="ww1245233" class="HeadingRunIn"><span></span>Example 6: Sequential Trigger Expression with Sequence Counts</h5><p id="ww1245234" class="BodyAfterHead"><span></span>The next trigger expression shows two new features, the sequence count and a true operator to count sample clocks:</p><p id="ww1245235" class="Body"><span></span>(TU1 &amp; TU2)#2 THEN TU3 THEN TU4#5 THEN (1)#200</p><p id="ww1245236" class="Body"><span></span>This trigger expression means wait for (TU1 and TU2) to be true two times, then wait for TU3 to be true, then wait for TU4 to be true five times, then wait 200 sample clocks. The count (# followed by number) operator can only be applied to a whole sequence, not part of a sequence. When the count operator is used in a sequence, the count may or may not be contiguous. The always true operator (1) can be used to wait or delay for a number of contiguous sample clocks. It is useful if you knew that an event that you wanted to capture occurred a certain time after a condition but you did not know the state of the trigger signals at that time.</p><p id="ww1245237" class="Body"><span></span>However, there is a limitation on the maximum size of the counter. This depends on how much hardware is reserved for the sequence counter. When you define a trigger expression, the Max Event Counter setting in the Trigger Expression section of Reveal Inserter and Reveal Analyzer specifies how large a count value is allowed in the trigger expression. Each trigger expression can have a unique Max Event Counter setting.</p><h5 id="ww1232293" class="HeadingRunIn"><span></span>See Also</h5><div id="ww1232297" class="Portal"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span><a href="../../User%20Guides/On-Chip%20Debugging/trigger_expressions.htm#ww1232028" title="Trigger Expression Syntax">Trigger Expression Syntax</a></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>