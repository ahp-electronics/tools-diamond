<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Inferring RAM</title><link rel="Prev" href="About_Inferring_Memory.htm" title="Previous" /><link rel="Next" href="inferring_ram_synch_read.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/srceditor.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="ppDS8wwnMG0ermVAbwzUoSQ" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/User%20Guides/Design%20Entry/inferring_ram.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Getting%20Startred/Getting_Started.htm">User Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="performing_design_entry.htm#1093319">Entering the Design</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="hdl_design_entry.htm#1093319">HDL Design Entry</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="LSE_coding_tips.htm#1093319">Coding Tips for Lattice Synthesis Engine (LSE)</a> &gt; Inferring RAM</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1093319" class="Heading3"><span></span>Inferring RAM</h4><p id="ww1093320" class="BodyAfterHead"><span></span>The basic inferred RAM is synchronous. It can have synchronous or asynchronous reads and can be either single- or dual-port. You can also set initial values. Other features, such as resets and clock enables, can be added as desired. The following text lists the rules for coding inferred RAM. Following that, <span class="Hyperlink"><a href="../../User%20Guides/Design%20Entry/inferring_ram.htm#ww1093330" title="Inferring RAM">this figure</a></span> (Verilog) and <span class="Hyperlink"><a href="../../User%20Guides/Design%20Entry/inferring_ram.htm#ww1093351" title="Inferring RAM">this figure</a></span> (VHDL) show the code for a simple, single-port RAM with asynchronous read.</p><p id="ww1094246" class="BodyAfterHead"><span></span>To code RAM to be inferred, do the following:</p><div id="ww1094247" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>Define the RAM as an indexed array of registers.</div><div id="ww1094248" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>To control how the RAM is implemented (with distributed or block RAM), consider adding the syn_ramstyle attribute. See <span class="Hyperlink"><a href="../../Reference%20Guides/Constraints%20Ref/syn_ramstyle_hdl_attribute.htm#ww998671" title="syn_ramstyle">syn_ramstyle</a></span>.</div><div id="ww1094249" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>Control the RAM with a clock edge and a write enable signal.</div><div id="ww1094252" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>For synchronous reads, see <span class="Hyperlink"><a href="../../User%20Guides/Design%20Entry/inferring_ram_synch_read.htm#ww1093409" title="Inferring RAM with Synchronous Read">Inferring RAM with Synchronous Read</a></span>.</div><div id="ww1094254" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>For single-port RAM, use the same address bus for reading and writing.</div><div id="ww1094257" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>For dual-port RAM, pseudo and true, see <span class="Hyperlink"><a href="../../User%20Guides/Design%20Entry/inferring_ram_dual_port.htm#ww1093536" title="Inferring Dual-Port RAM">Inferring Dual-Port RAM</a></span>.</div><div id="ww1094261" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>If desired, assign initial values to the RAM as described in <span class="Hyperlink"><a href="../../User%20Guides/Design%20Entry/inferring_ram_initializing.htm#ww1093703" title="Initializing Inferred RAM">Initializing Inferred RAM</a></span>.</div><p id="ww1094242" class="Body"><span></span> </p><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption class="FigureTitle" style="caption-side: top"><div id="ww1093330" class="FigureTitle">Simple, Single-Port RAM in Verilog</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1093332" class="Code">module ram (din, addr, write_en, clk, dout);</pre><pre id="ww1093333" class="Code">&nbsp;&nbsp;parameter addr_width = 8;</pre><pre id="ww1093334" class="Code">&nbsp;&nbsp;parameter data_width = 8;</pre><pre id="ww1093335" class="Code">&nbsp;&nbsp;input [addr_width-1:0] addr;</pre><pre id="ww1093336" class="Code">&nbsp;&nbsp;input [data_width-1:0] din;</pre><pre id="ww1093337" class="Code">&nbsp;&nbsp;input write_en, clk;</pre><pre id="ww1093338" class="Code">&nbsp;&nbsp;<span class="GUI">reg [data_width-1:0] mem [(1&lt;&lt;addr_width)-1:0];</span></pre><pre id="ww1093339" class="Code" style="vertical-align: baseline"><span class="GUI">&nbsp;&nbsp;&nbsp;&nbsp;// Define RAM as an indexed memory array.</span></pre><pre id="ww1093340" class="Code">&nbsp;</pre><pre id="ww1093341" class="Code">&nbsp;&nbsp;<span class="GUI">always @(posedge clk)</span> <span class="GUI">// Control with a clock edge.</span></pre><pre id="ww1093342" class="Code">&nbsp;&nbsp;begin</pre><pre id="ww1093343" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="GUI">if (write_en)</span> <span class="GUI">// And control with a write enable.</span></pre><pre id="ww1093344" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mem[(addr)] &lt;= din;</pre><pre id="ww1093345" class="Code">&nbsp;&nbsp;end</pre><pre id="ww1093346" class="Code">&nbsp;&nbsp;assign dout = mem[addr];</pre><pre id="ww1093347" class="Code">endmodule</pre></td></tr></table></div><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><caption class="FigureTitle" style="caption-side: top"><div id="ww1093351" class="FigureTitle">Simple, Single-Port RAM in VHDL</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1093353" class="Code">library IEEE;</pre><pre id="ww1093354" class="Code">use IEEE.std_logic_1164.all;</pre><pre id="ww1093355" class="Code">use IEEE.std_logic_unsigned.all;</pre><pre id="ww1093356" class="Code">&nbsp;</pre><pre id="ww1093357" class="Code">entity ram is</pre><pre id="ww1093358" class="Code">generic (</pre><pre id="ww1093359" class="Code">&nbsp;&nbsp;addr_width : natural := 8;</pre><pre id="ww1093360" class="Code">&nbsp;&nbsp;data_width : natural := 8);</pre><pre id="ww1093361" class="Code">port (</pre><pre id="ww1093362" class="Code">&nbsp;&nbsp;addr : in  std_logic_vector (addr_width - 1 downto 0);</pre><pre id="ww1093363" class="Code">&nbsp;&nbsp;write_en : in  std_logic; </pre><pre id="ww1093364" class="Code">&nbsp;&nbsp;clk : in  std_logic; </pre><pre id="ww1093365" class="Code">&nbsp;&nbsp;din : in  std_logic_vector (data_width - 1 downto 0);</pre><pre id="ww1093366" class="Code">&nbsp;&nbsp;dout : out std_logic_vector (data_width - 1 downto 0));</pre><pre id="ww1093367" class="Code">end ram;</pre><pre id="ww1093368" class="Code">&nbsp;</pre><pre id="ww1093369" class="Code">architecture rtl of ram is</pre><pre id="ww1093370" class="Code">&nbsp;&nbsp;<span class="GUI">type mem_type is array ((2** addr_width) - 1 downto 0) of </span></pre><pre id="ww1093371" class="Code" style="vertical-align: baseline"><span class="GUI">&nbsp;&nbsp;&nbsp;&nbsp;std_logic_vector(data_width - 1 downto 0);</span></pre><pre id="ww1093372" class="Code" style="vertical-align: baseline"><span class="GUI">&nbsp;&nbsp;signal mem : mem_type;</span></pre><pre id="ww1093373" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="GUI">-- Define RAM as an indexed memory array.</span></pre><pre id="ww1093374" class="Code">begin</pre><pre id="ww1093375" class="Code">&nbsp;&nbsp;process (clk)</pre><pre id="ww1093376" class="Code">&nbsp;&nbsp;begin</pre><pre id="ww1093377" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;<span class="GUI">if (clk'event and clk = '1') then</span> <span class="GUI">--Control with clock edge</span></pre><pre id="ww1093378" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="GUI">if (write_en = '1') then</span> <span class="GUI">-- Control with a write enable.</span></pre><pre id="ww1093379" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mem(conv_integer(addr)) &lt;= din;</pre><pre id="ww1093380" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end if;</pre><pre id="ww1093381" class="Code">&nbsp;&nbsp;&nbsp;&nbsp;end if;</pre><pre id="ww1093382" class="Code">&nbsp;&nbsp;end process;</pre><pre id="ww1093383" class="Code">&nbsp;&nbsp;dout &lt;= mem(conv_integer(addr));</pre><pre id="ww1093384" class="Code">end rtl;</pre></td></tr></table></div><h5 id="ww1093402" class="HeadingRunIn"><span></span>See Also</h5><div id="ww1093407" class="Portal" style="vertical-align: baseline"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span><span class="Hyperlink"><a href="../../User%20Guides/Design%20Entry/blocking_assignments.htm#ww1093794" title="About Verilog Blocking Assignments">About Verilog Blocking Assignments</a></span></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>