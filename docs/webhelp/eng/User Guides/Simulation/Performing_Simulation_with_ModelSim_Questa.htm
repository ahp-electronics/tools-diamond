<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Performing Simulation with Mentor Graphics ModelSim / Questa</title><link rel="Prev" href="Performing%20Mixed-Language_with_Cadence_NC_Sim.htm" title="Previous" /><link rel="Next" href="Performing_Simulation_with_Synopsys_VCS.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/simulation.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="plMGydrleHGOcfHrZwhig0g" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/User%20Guides/Simulation/Performing_Simulation_with_ModelSim_Questa.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Getting%20Startred/Getting_Started.htm">User Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="simulating_the_design.htm#1025524">Simulating the Design</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Third_Party_Simulators.htm#1025524">Third-Party Simulators</a> &gt; Performing Simulation with Mentor Graphics ModelSim / Questa</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h3 id="ww1025524" class="Heading2"><span></span>Performing Simulation with Mentor Graphics ModelSim / Questa</h3><p id="ww1025525" class="BodyAfterHead"><span></span>This section explains how to perform simulation with the Mentor Graphics ModelSim / Questa simulator.</p><h5 id="ww1025526" class="HeadingRunIn"><span></span>Setting Lattice Semiconductor Libraries</h5><p id="ww1030248" class="Body"><span></span>Before simulating Lattice Semiconductor FPGA designs in the Mentor Graphics ModelSim / Questa simulator, you must compile the Lattice Semiconductor simulation libraries using the cmpl_libs command available from the Diamond's TCL console.</p><p id="ww1030324" class="Body"><span></span>For details about using this command, refer to <span class="Hyperlink"><a href="../../Reference%20Guides/Tcl%20Commands/simulation_libraries_compilation_tcl_command.htm#ww1245459" title="Simulation Libraries Compilation Tcl Command">Simulation Libraries Compilation Tcl Command</a></span>.</p><h5 id="ww1030238" class="StepIntro"><span></span>To enable Diamondâ€™s batch interface to ModelSim / Questa, change the default simulation tool setup and directory reference as follows:</h5><div id="ww1025543" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>1.	</span></span>Choose <span style="font-weight: bold">Options &gt; Environment Options</span>.</div><div id="ww1025544" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>2.	</span></span>Click on the <span style="font-weight: bold">Directories</span> tab. </div><div id="ww1030415" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>3.	</span></span>Change the path setting to the ModelSim / Questa executable on the tab to the new version.</div><div id="ww1030421" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>4.	</span></span>Click <span style="font-weight: bold">OK</span>.</div><h5 id="ww1030520" class="HeadingRunIn"><span></span>Mapping to ModelSim / Questa Libraries</h5><p id="ww1030521" class="BodyAfterHead"><span></span>The library compilation target folder should also be your simulation working directory. Otherwise, you need to copy the library mappings from modelsim.ini at the target folder (or the file itself) into your local or master modelsim.ini. </p><p id="ww1030524" class="Body"><span></span>After running simulation libraries compilation using the cmpl_libs TCL command, a modelsim.ini file will be created at the target folder chosen for the compiled libraries. That file will have the proper mappings for these compiled libraries.</p><h5 id="ww1025634" class="HeadingRunIn"><span></span>Performing Verilog Simulation</h5><p id="ww1025635" class="BodyAfterHead"><span></span>Use the procedures described in this section to perform a Verilog standalone simulation with ModelSim / Questa.</p><h5 id="ww1025636" class="HeadingRunIn"><span></span>Functional RTL Simulation</h5><p id="ww1025637" class="BodyAfterHead"><span></span>Use the following commands to perform a functional RTL simulation with one of the libraries shown in <span class="Hyperlink"><a href="../../User%20Guides/Simulation/Simulation_Library_Files.htm#ww1042859" title="Simulation Library Files">this table</a></span>:</p><pre id="ww1025641" class="Code">vlib work</pre><pre id="ww1025642" class="Code">vlog -work work &lt;<code class="CodeVariable">design_name</code>&gt;.v &lt;<code class="CodeVariable">test_bench</code>&gt;.v</pre><pre id="ww1025649" class="Code">vsim work.&lt;<code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1025645" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025647" class="CellBody"><span></span>If you have a pre-existing work library, you can clear its contents by using the following command:</div><pre id="ww1025648" class="Code">vdel -lib work -all</pre></td></tr></table></div><h5 id="ww1025650" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation </h5><p id="ww1025651" class="BodyAfterHead"><span></span>Use the following commands to perform post-map and place-and-route gate-level simulation:</p><pre id="ww1025652" class="Code">vlib work</pre><pre id="ww1025653" class="Code">vlog -work work &lt;<code class="CodeVariable">design_name</code>&gt;.vo &lt;<code class="CodeVariable">test_bench</code>&gt;.v</pre><pre id="ww1025654" class="Code">vsim -L &lt;<span style="font-style: italic">library_name</span>&gt;<span style="font-size: 10.0pt"> </span>work.&lt;<code class="CodeVariable">test_bench</code>&gt;</pre><p id="ww1025655" class="Body"><span></span>where &lt;<span style="font-style: italic">library_name</span>&gt; is the FPGA Verilog library to be searched for the low-level units.</p><h5 id="ww1025656" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation with Timing</h5><p id="ww1025657" class="BodyAfterHead"><span></span>Use the following procedure to perform post-map and place-and-route gate-level simulation with timing:</p><div id="ww1025658" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>1.	</span></span>Add the <span>sdf_annotate </span>line at the top-level test bench:</div><pre id="ww1025659" class="CodeIndented">$sdf_annotate ("&lt;<code class="CodeVariable">design_name</code>&gt;.sdf", &lt;<code class="CodeVariable">instance_name</code>&gt;, ,&lt;<code class="CodeVariable">sdf_log</code>&gt;, "MAXIMUM");</pre><div id="ww1025660" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>2.	</span></span>Use the following commands to perform the simulation:</div><pre id="ww1025661" class="CodeIndented">vlib work</pre><pre id="ww1025662" class="CodeIndented">vlog -work work <span style="font-style: italic">&lt;design_name&gt;</span>.vo <span style="font-style: italic">&lt;test_bench&gt;</span>.v</pre><pre id="ww1027991" class="CodeIndented">vsim -L &lt;<span style="font-style: italic">library_name</span>&gt; work.<span style="font-style: italic">&lt;test_bench&gt;</span></pre><h5 id="ww1030450" class="HeadingRunIn"><span></span>Performing VHDL Simulation</h5><p id="ww1027993" class="Body"><span></span>Use the procedures described in this section to perform a VHDL standalone simulation with ModelSim / Questa.</p><h5 id="ww1025673" class="HeadingRunIn"><span></span>Functional RTL Simulation</h5><p id="ww1025674" class="BodyAfterHead"><span></span>Use the following commands to perform a functional RTL simulation with one of the libraries shown in <span class="Hyperlink"><a href="../../User%20Guides/Simulation/Simulation_Library_Files.htm#ww1037799" title="Simulation Library Files">this table</a></span>:</p><pre id="ww1025678" class="Code">vlib work</pre><pre id="ww1025679" class="Code">vcom -work work <span style="font-style: italic">&lt;</span><code class="CodeVariable">design_name</code><span style="font-style: italic">&gt;</span>.vhd <span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span>.vhd</pre><pre id="ww1025686" class="Code">vsim -t ps work.<span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1025682" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025684" class="CellBody"><span></span>If you have a pre-existing work library, you can clear its contents by using the following command:</div><pre id="ww1025685" class="Code">vdel -lib work -all</pre></td></tr></table></div><h5 id="ww1025687" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation</h5><p id="ww1025688" class="BodyAfterHead"><span></span>Use the following commands to perform post-map and place-and-route gate-level simulation:</p><pre id="ww1025689" class="Code">vlib work</pre><pre id="ww1025690" class="Code">vcom -work work &lt;<span style="font-style: italic">design_name</span>&gt;.vho &lt;<span style="font-style: italic">test_bench</span>&gt;.vhd</pre><pre id="ww1025691" class="Code">vsim -t ps +no_glitch_msg work.<span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><h5 id="ww1025692" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation with Timing</h5><p id="ww1025693" class="BodyAfterHead"><span></span>Use the following commands to perform post-map and place-and-route gate-level simulation with timing:</p><pre id="ww1025694" class="Code">vlib work</pre><pre id="ww1025695" class="Code">vcom -work work &lt;<span style="font-style: italic">design_name</span>&gt;.vho &lt;<span style="font-style: italic">test_bench</span>&gt;.vhd</pre><pre id="ww1025696" class="Code">vsim -t ps +no_glitch_msg -sdfmax </pre><pre id="ww1025697" class="Code">&lt;<code class="CodeVariable">instance_name</code>&gt;="&lt;<code class="CodeVariable">design_name</code>&gt;.sdf" work.<span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><h5 id="ww1029277" class="HeadingRunIn"><span></span>See Also</h5><p id="ww1029281" class="Body" style="vertical-align: baseline"><span></span><span class="Hyperlink"><a href="../../User%20Guides/Simulation/Third_Party_Simulators.htm#ww1028923" title="Third-Party Simulators">Third-Party Simulators</a></span></p></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>