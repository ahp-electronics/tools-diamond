<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>Performing Simulation with Aldec Riviera Pro</title><link rel="Prev" href="Simulation_Library_Files.htm" title="Previous" /><link rel="Next" href="Performing_Simulation_with_Aldec_Active_HDL.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/simulation.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pD2jymwkQYpDrbK_002fsNQyptg" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/User%20Guides/Simulation/Performing_Simulation_with_Aldec_Riviera_Pro.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Getting%20Startred/Getting_Started.htm">User Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="simulating_the_design.htm#1025018">Simulating the Design</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Third_Party_Simulators.htm#1025018">Third-Party Simulators</a> &gt; Performing Simulation with Aldec Riviera Pro</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h3 id="ww1025018" class="Heading2"><span></span>Performing Simulation with Aldec Riviera Pro</h3><p id="ww1025019" class="BodyAfterHead"><span></span>This section explains how to perform simulation with the Aldec Riviera Pro simulator.</p><h5 id="ww1025020" class="HeadingRunIn"><span></span>Creating or Updating Lattice Semiconductor's FPGA Vendor Libraries</h5><div id="ww1025021" class="Normal" style="vertical-align: baseline"><span style="color: #000000; font-size: 10.0pt; font-style: normal; font-variant: normal; font-weight: normal; text-transform: none; vertical-align: baseline">Create VHDL or Verilog libraries by following the procedures in this section.</span></div><h5 id="ww1025022" class="HeadingRunIn"><span></span>Creating VHDL Libraries</h5><p id="ww1025023" class="BodyAfterHead"><span></span>If you do not have Lattice Semiconductor's FPGA VHDL libraries as pre-compiled vendor libraries, the following steps are required to create them:</p><div id="ww1025024" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>1.	</span></span>Create Lattice Semiconductor's FPGA VHDL libraries:</div><pre id="ww1025025" class="CodeIndented"># create new VHDL libraries</pre><pre id="ww1033843" class="CodeIndented">alib ecp5u</pre><pre id="ww1033839" class="CodeIndented">alib sc</pre><pre id="ww1025027" class="CodeIndented">alib ec</pre><pre id="ww1025028" class="CodeIndented">alib xp</pre><pre id="ww1025029" class="CodeIndented">alib ecp</pre><pre id="ww1025030" class="CodeIndented">alib machxo</pre><pre id="ww1025031" class="CodeIndented">alib ecp2</pre><pre id="ww1025037" class="CodeIndented">alib xp2</pre><pre id="ww1027785" class="CodeIndented">alib ecp3</pre><pre id="ww1027786" class="CodeIndented">alib machxo2</pre><pre id="ww1043320" class="CodeIndented">alib machxo3d</pre><pre id="ww1033869" class="CodeIndented">alib machxo3l</pre><pre id="ww1033884" class="CodeIndented">alib lptm</pre><pre id="ww1033899" class="CodeIndented">alib lptm2</pre><pre id="ww1042664" class="CodeIndented">alib lifmd</pre><pre id="ww1046129" class="CodeIndented">alib lifmdf</pre><pre id="ww1047045" class="CodeIndented">alib lfmnx</pre><pre id="ww1034933" class="CodeIndented">amap scm ./sc</pre><pre id="ww1034939" class="CodeIndented">amap ecp2m ./ecp2</pre><pre id="ww1034945" class="CodeIndented">amap ecp5um ./ecp5u</pre><div class="ww_skin_page_overflow"><table class="NoteIndented" cellspacing="0" summary=""><caption class="NoteTitleIndented" style="caption-side: top"><div id="ww1034936" class="NoteTitleIndented">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1034938" class="CellBody"><span></span>The VHDL library names are strict.</div></td></tr></table></div><div id="ww1034940" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>2.	</span></span>For each of the above VHDL libraries compile the source files by using the <code class="Code">acom</code><span style="color: #0000ff"> </span>command:</div><pre id="ww1025039" class="CodeIndented">acom -work &lt;<code class="CodeVariable">library_name</code>&gt; -reorder &lt;<span style="font-style: italic">vhdl_lib_src_folder</span>&gt;/*.vhd</pre><div id="ww1025040" class="Indented">where: </div><div id="ww1038447" class="BulletedIndented"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../bullet2nd.png" alt="*" border="0" width="7" height="7" /></span></span><code class="Code">&lt;</code><code class="Code" style="font-style: italic">vhdl_lib_src_folder</code><code class="Code" style="font-style: normal">&gt;</code> is the folder containing VHDL source files for the appropriate Lattice Semiconductor library <code class="Code">&lt;</code><code class="Code" style="font-style: italic">library_name</code><code class="Code" style="font-style: normal">&gt;</code>.</div><div id="ww1038455" class="Indented">For the ecp5u library, there is an extra step required. You must also compile the Verilog source files by using the <code class="Code">alog</code><span style="color: #0000ff"> </span>command:</div><pre id="ww1038456" class="CodeIndented">alog -work &lt;<code class="CodeVariable">library_name</code>&gt; &lt;<span style="font-style: italic">vhdl_lib_src_folder</span>&gt;/*.v</pre><div id="ww1038457" class="Indented">where: </div><div id="ww1038458" class="BulletedIndented"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../bullet2nd.png" alt="*" border="0" width="7" height="7" /></span></span><code class="Code">&lt;</code><code class="Code" style="font-style: italic">vhdl_lib_src_folder</code><code class="Code" style="font-style: normal">&gt;</code> is the folder containing VHDL source files for the appropriate Lattice Semiconductor library <code class="Code">&lt;</code><code class="Code" style="font-style: italic">library_name</code><code class="Code" style="font-style: normal">&gt;</code>.</div><div id="ww1038449" class="Indented">If you want to place the debugging information in the library, use the –dbg<span> </span>switch. Debugging may slow down simulation.</div><div id="ww1025110" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>3.	</span></span>Set the status of the newly created library as read-only to prevent accidental overwriting:</div><pre id="ww1025111" class="CodeIndented">setlibrarymode -ro &lt;<code class="CodeVariable">library_name</code>&gt;</pre><h5 id="ww1025112" class="HeadingRunIn"><span></span>Creating Verilog Libraries </h5><p id="ww1025113" class="BodyAfterHead"><span></span>If you do not have Lattice Semiconductor's FPGA Verilog libraries as pre-compiled vendor libraries, the following steps are required to create them:</p><div id="ww1025114" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>1.	</span></span>Create Lattice Semiconductor's FPGA Verilog libraries:</div><pre id="ww1025115" class="CodeIndented"># create new Verilog libraries</pre><pre id="ww1025116" class="CodeIndented">alib ovi_ecp5u</pre><pre id="ww1033937" class="CodeIndented">alib ovi_sc</pre><pre id="ww1025117" class="CodeIndented">alib ovi_ec</pre><pre id="ww1025118" class="CodeIndented">alib ovi_xp</pre><pre id="ww1027134" class="CodeIndented">alib ovi_xp2</pre><pre id="ww1025119" class="CodeIndented">alib ovi_ecp</pre><pre id="ww1028076" class="CodeIndented">alib ovi_ecp2</pre><pre id="ww1028077" class="CodeIndented">alib ovi_ecp3</pre><pre id="ww1028078" class="CodeIndented">alib ovi_machxo</pre><pre id="ww1025121" class="CodeIndented">alib ovi_machxo2</pre><pre id="ww1043338" class="CodeIndented">alib ovi_machxo3d</pre><pre id="ww1034007" class="CodeIndented">alib ovi_machxo3l</pre><pre id="ww1034031" class="CodeIndented">alib ovi_lptm</pre><pre id="ww1034043" class="CodeIndented">alib ovi_lptm2</pre><pre id="ww1042669" class="CodeIndented">alib ovi_lifmd</pre><pre id="ww1046134" class="CodeIndented">alib ovi_lifmdf</pre><pre id="ww1047069" class="CodeIndented">alib ovi_lfmnx</pre><pre id="ww1042192" class="CodeIndented">amap ovi_scm ./ovi_sc</pre><pre id="ww1027865" class="CodeIndented">amap ovi_ecp2m ./ovi_ecp2</pre><pre id="ww1034969" class="CodeIndented">amap ovi_ecp5um ./ovi_ecp5u</pre><div class="ww_skin_page_overflow"><table class="NoteIndented" cellspacing="0" summary=""><caption class="NoteTitleIndented" style="caption-side: top"><div id="ww1025124" class="NoteTitleIndented">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025126" class="CellBody"><span></span>The Verilog library names are not strict, but they conform to Aldec's naming convention for Verilog vendor libraries.</div></td></tr></table></div><div id="ww1025128" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>2.	</span></span>For each of the above Verilog libraries, compile the source files by using the alog command:</div><pre id="ww1025129" class="CodeIndented">alog -quiet -work &lt;<code class="CodeVariable">library_name</code>&gt; &lt;<code class="CodeVariable">verilog_lib_src_folder</code>&gt;/*.v</pre><div id="ww1025130" class="Indented">where &lt;<code class="CodeVariable" style="font-size: 9.0pt">verilog_lib_src_folder</code>&gt; is the folder containing the Verilog source files for the &lt;<code class="CodeVariable" style="font-size: 9.0pt">library_name</code>&gt; library.</div><div id="ww1025131" class="Indented">If you want to place the debugging information in the library, use the<span> </span>–dbg switch. Debugging may slow down simulation.</div><div class="ww_skin_page_overflow"><table class="NoteIndented" cellspacing="0" summary=""><caption class="NoteTitleIndented" style="caption-side: top"><div id="ww1025134" class="NoteTitleIndented">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025136" class="CellBody" style="vertical-align: baseline"><span></span><span style="color: #000000; font-size: 10.0pt; font-style: normal; font-variant: normal; font-weight: normal; text-transform: none; vertical-align: baseline">Ignore the warning messages.</span></div></td></tr></table></div><div id="ww1025137" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>3.	</span></span>Set the status of the newly created library as read-only to prevent accidental overwriting:</div><pre id="ww1025138" class="CodeIndented">setlibrarymode -ro &lt;<code class="CodeVariable">library_name</code>&gt;</pre><h5 id="ww1025139" class="HeadingRunIn"><span></span>Updating Lattice Semiconductor's Vendor Libraries</h5><p id="ww1025140" class="BodyAfterHead"><span></span>If you obtained the updated source code of Lattice Semiconductor's FPGA libraries, you can update the VHDL libraries, Verilog libraries, or both by using the following procedure (for each one of the VHDL or Verilog libraries):</p><div id="ww1025141" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>1.	</span></span>Using the cd command, navigate to the directory where your vendor library resides. The vendor libraries are usually located in the &lt;<span style="font-style: italic">install_dir</span>&gt;/vlib folder when pre-compiled by Aldec.</div><div id="ww1025142" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>2.	</span></span>Set the library mode to read-write by using the setlibrarymode<span style="color: #0000ff"> </span>command:</div><pre id="ww1025143" class="CodeIndented">setlibrarymode -rw &lt;<code class="CodeVariable">library_name</code>&gt;</pre><div id="ww1025144" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>3.	</span></span>Compile the source code into the library. Use the acom<span style="color: #0000ff"> </span>command for VHDL source files and the alog<span style="color: #0000ff"> </span>command for Verilog source files.</div><pre id="ww1038586" class="CodeIndented">acom -work &lt;<code class="CodeVariable">library_name</code>&gt; -reorder &lt;<span style="font-style: italic">library_src_folder</span>&gt;/*.vhd</pre><div id="ww1038587" class="Indented">or</div><pre id="ww1025147" class="CodeIndented">alog -quiet -work &lt;<code class="CodeVariable">library_name</code>&gt; &lt;<span style="font-style: italic">library_src</span><code class="CodeVariable">_folder</code>&gt;/*.v</pre><div class="ww_skin_page_overflow"><table class="NoteIndented" cellspacing="0" summary=""><caption class="NoteTitleIndented" style="caption-side: top"><div id="ww1038617" class="NoteTitleIndented">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1038619" class="CellBody"><span></span>For the ecp5u VHDL library, you must perform both of the above steps.</div></td></tr></table></div><div id="ww1025148" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>4.	</span></span>Set the library to the read-only mode to prevent accidental overwriting:</div><pre id="ww1025156" class="CodeIndented">setlibrarymode -ro &lt;<code class="CodeVariable">library_name</code>&gt;</pre><div class="ww_skin_page_overflow"><table class="NoteIndented" cellspacing="0" summary=""><caption class="NoteTitleIndented" style="caption-side: top"><div id="ww1025151" class="NoteTitleIndented">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025153" class="CellBody"><span></span>You can enter the commands either in command-line mode or in the graphical console. Alternatively, you can write a macro that will prepare and compile the libraries, as follows:</div><div id="ww1025154" class="CellNumbered"><span class="WebWorks_Number" style="width: 14.4pt"><span>1.	</span></span>Include in the macro the appropriate commands for the libraries that you want to create or update.</div><div id="ww1025155" class="CellNumbered"><span class="WebWorks_Number" style="width: 14.4pt"><span>2.	</span></span>Run the runvsimsa<span style="font-weight: bold"> </span>script (Linux) or the runvsimsa.bat batch file (Windows) command with the macro as a command-line argument.</div></td></tr></table></div><h5 id="ww1025157" class="HeadingRunIn"><span></span>Performing Verilog Simulation</h5><p id="ww1025158" class="BodyAfterHead"><span></span>Use the procedures described in this section to perform a Verilog simulation.</p><h5 id="ww1025159" class="HeadingRunIn"><span></span>Functional RTL Simulation</h5><p id="ww1025160" class="BodyAfterHead"><span></span>Use the following commands to perform a functional RTL simulation with one of the libraries shown in <span class="Hyperlink"><a href="../../User%20Guides/Simulation/Simulation_Library_Files.htm#ww1042859" title="Simulation Library Files">this table</a></span>:</p><pre id="ww1025164" class="Code">alib work</pre><pre id="ww1025165" class="Code">alog -v2k -work work &lt;<code class="CodeVariable">design_name</code>&gt;.v &lt;<code class="CodeVariable">test_bench</code>&gt;.v</pre><pre id="ww1025172" class="Code">asim work.&lt;<code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1025168" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025170" class="CellBody"><span></span>If you have a pre-existing work library, you can clear its contents by using the following command:</div><pre id="ww1025171" class="Code">adel -lib work -all</pre></td></tr></table></div><h5 id="ww1025173" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation </h5><p id="ww1025174" class="BodyAfterHead"><span></span>Use the following commands to perform post-map and place-and-route gate-level simulation:</p><pre id="ww1025175" class="Code">alib work</pre><pre id="ww1025176" class="Code">alog -quiet -v2k -work work -l &lt;<span style="font-style: italic">library_name</span>&gt; &lt;<code class="CodeVariable">design_name</code>&gt;.vo &lt;<code class="CodeVariable">test_bench</code>&gt;.v</pre><pre id="ww1025177" class="Code">asim -O5 +access +rw -L &lt;<span style="font-style: italic">library_name</span>&gt;<span style="font-size: 10.0pt"> </span>work.&lt;<code class="CodeVariable">test_bench</code>&gt;</pre><p id="ww1025178" class="Body"><span></span>where &lt;<span style="font-style: italic">library_name</span>&gt; is the FPGA Verilog library to be searched for the low-level units.</p><h5 id="ww1025179" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation with Timing</h5><p id="ww1025180" class="BodyAfterHead"><span></span>Use the following procedure to perform post-map and place-and-route gate-level simulation with timing:</p><div id="ww1025181" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>1.	</span></span>Add the <span>sdf_annotate </span>line at the top-level test bench:</div><pre id="ww1025182" class="CodeIndented">$sdf_annotate ("&lt;<code class="CodeVariable">design_name</code>&gt;.sdf", &lt;<code class="CodeVariable">instance_name</code>&gt;, ,&lt;<code class="CodeVariable">sdf_log</code>&gt;, "MAXIMUM");</pre><div id="ww1025183" class="Numbered"><span class="WebWorks_Number" style="width: 16.56pt"><span>2.	</span></span>Use the following commands to perform the simulation:</div><pre id="ww1025184" class="CodeIndented">alib work</pre><pre id="ww1025185" class="CodeIndented">alog -quiet -v2k -work work -l &lt;<span style="font-style: italic">library_name</span>&gt; <span style="font-style: italic">&lt;design_name&gt;</span>.vo <span style="font-style: italic">&lt;test_bench&gt;</span>.v</pre><pre id="ww1025186" class="CodeIndented">asim -O5 +access +rw -L &lt;<span style="font-style: italic">library_name</span>&gt; work.<span style="font-style: italic">&lt;test_bench&gt;</span></pre><h5 id="ww1025187" class="HeadingRunIn"><span></span>Performing VHDL Simulation</h5><p id="ww1025188" class="BodyAfterHead"><span></span>Use the procedures described in this section to perform a VHDL simulation.</p><h5 id="ww1025189" class="HeadingRunIn"><span></span>Functional RTL Simulation</h5><p id="ww1025190" class="BodyAfterHead"><span></span>Use the following commands to perform a functional RTL simulation with one of the libraries shown in <span class="Hyperlink"><a href="../../User%20Guides/Simulation/Simulation_Library_Files.htm#ww1037799" title="Simulation Library Files">this table</a></span>:</p><pre id="ww1025194" class="Code">alib work</pre><pre id="ww1025195" class="Code">acom -work work <span style="font-style: italic">&lt;</span><code class="CodeVariable">design_name</code><span style="font-style: italic">&gt;</span>.vhd <span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span>.vhd</pre><pre id="ww1025209" class="Code">asim -t ps work.<span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1025198" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025200" class="CellBody"><span></span>If you have a pre-existing work library, you can clear its contents by using the following command:</div><pre id="ww1025201" class="Code">adel -lib work -all</pre></td></tr></table></div><h5 id="ww1025210" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation</h5><p id="ww1025211" class="BodyAfterHead"><span></span>Use the following commands to perform post-map and place-and-route gate-level simulation:</p><pre id="ww1025212" class="Code">alib work</pre><pre id="ww1025213" class="Code">acom -work work &lt;<span style="font-style: italic">design_name</span>&gt;.vho &lt;<span style="font-style: italic">test_bench</span>&gt;.vhd</pre><pre id="ww1025214" class="Code">asim -t ps -noglitchmsg work.<span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><h5 id="ww1025215" class="HeadingRunIn"><span></span>Post-Map and Place-and-Route Gate-Level Simulation with Timing</h5><p id="ww1025216" class="BodyAfterHead"><span></span>Use the following commands to perform post-map and place-and-route gate-level simulation with timing:</p><pre id="ww1025217" class="Code">alib work</pre><pre id="ww1025218" class="Code">acom -work work &lt;<span style="font-style: italic">design_name</span>&gt;.vho &lt;<span style="font-style: italic">test_bench</span>&gt;.vhd</pre><pre id="ww1025219" class="Code">asim -t ps -noglitchmsg -sdfmax </pre><pre id="ww1025225" class="Code">/&lt;<code class="CodeVariable">instance_name</code>&gt;="&lt;<code class="CodeVariable">design_name</code>&gt;.sdf" work.<span style="font-style: italic">&lt;</span><code class="CodeVariable">test_bench</code><span style="font-style: italic">&gt;</span></pre><div class="ww_skin_page_overflow"><table class="Note" cellspacing="0" summary=""><caption class="NoteTitle" style="caption-side: top"><div id="ww1025222" class="NoteTitle">Note</div></caption><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: none; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: none; border-right-width: 0px; border-top-color: #E5E5E5; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 4px; vertical-align: top"><div id="ww1025224" class="CellBody"><span></span>The “/” character is Aldec’s default hierarchy separator.</div></td></tr></table></div><h5 id="ww1029233" class="HeadingRunIn"><span></span>See Also</h5><p id="ww1029237" class="Body" style="vertical-align: baseline"><span></span><span class="Hyperlink"><a href="../../User%20Guides/Simulation/Third_Party_Simulators.htm#ww1028923" title="Third-Party Simulators">Third-Party Simulators</a></span></p></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>