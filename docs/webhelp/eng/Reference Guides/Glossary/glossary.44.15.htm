<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>P</title><link rel="Prev" href="glossary.44.14.htm" title="Previous" /><link rel="Next" href="glossary.44.16.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/glossary.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pgIovgdrCSKgx5fdcSA8qLg" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Glossary/glossary.44.15.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="glossary.44.01.htm#1200295">Glossary</a> &gt; P</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h2 id="ww1200295" class="Heading1"><span></span>P</h2><h5 id="ww1200304" class="GlossTerm"><span></span>PAC-Designer</h5><p id="ww1203009" class="GlossDef"><span></span>PAC-Designer is a set of Lattice design entry, simulation, and programming tools that support the Lattice ispPAC families of analog devices, including Power Manager, Platform Manager, and ispClock. See also <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1200483" title="P">Power Manager</a>, <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1200536" title="P">Platform Manager</a>, and <a href="../../Reference%20Guides/Glossary/glossary.44.09.htm#ww1200637" title="I">ispClock</a>.</p><h5 id="ww1203019" class="GlossTerm"><span></span>package</h5><p id="ww1200297" class="GlossDef"><span></span>A package is the ceramic or plastic housing in which an integrated circuit is sealed. Fine gold or aluminum wires connect the chip pads to the larger package pins.</p><h5 id="ww1189018" class="GlossTerm"><span></span>Package View</h5><p id="ww1189019" class="GlossDef"><span></span>Package View is a view in Lattice Diamond that shows the pin layout of the device and displays the assignments of signals to device pins. Package View interacts with Netlist View for assigning pins, enabling you to drag selected signals to the desired locations on the pin layout to establish LOCATE preferences. See also <a href="../../Reference%20Guides/Glossary/glossary.44.13.htm#ww1200938" title="N">Netlist View</a>.</p><h5 id="ww1189020" class="GlossTerm"><span></span>.pad</h5><p id="ww1189021" class="GlossDef"><span></span>A .pad file is an FPGA report file containing a listing of all programmable interface cells (PIC) used in the design, their associated primary pins, and any assigned preferences. The .pad file is generated when you run the Place &amp; Route process in Lattice Diamond.</p><h5 id="ww1189022" class="GlossTerm"><span></span>pad</h5><p id="ww1189023" class="GlossDef"><span></span>A pad is a metallized area on an integrated circuit that connects the I/O circuits in the chip to the package or substrate with wires or solder balls. All signals on a chip must enter and leave by way of a pad. Pads are connected to package pins in order for signals to enter or leave an integrated circuit package.</p><h5 id="ww1204683" class="GlossTerm"><span></span>.par</h5><p id="ww1204684" class="GlossDef"><span></span>A .par file is an FPGA report file generated by the Place &amp; Route process in Lattice Diamond. It summarizes the information from all placement and routing iterations. It also shows the steps taken as the program converges on a placement and routing solution. </p><h5 id="ww1189028" class="GlossTerm"><span></span>par</h5><p id="ww1231420" class="GlossDef"><span></span>Par is a command-line program that performs FPGA placement and routing. It is equivalent to the Place &amp; Route Design process in the Lattice Diamond software. See also .</p><h5 id="ww1231424" class="GlossTerm"><span></span>parameterized module</h5><p id="ww1189031" class="GlossDef"><span></span>A parameterized module is a core in which you can set the values of one or more inputs without having to regenerate the module. For example, you can specify the input bit width or whether to create RPMs.</p><h5 id="ww1189032" class="GlossTerm"><span></span>parasitic capacitance</h5><p id="ww1189033" class="GlossDef"><span></span>Parasitic capacitance is any capacitance causing unwanted effects between conductors or in devices.</p><h5 id="ww1189034" class="GlossTerm"><span></span>partitioning</h5><p id="ww1189035" class="GlossDef"><span></span>Partitioning is 1) The process of splitting a single design among multiple devices. 2) The maximum level of integration (density concern).</p><h5 id="ww1189036" class="GlossTerm"><span></span>path</h5><p id="ww1189037" class="GlossDef"><span></span>A path is a connected series of nets and logic elements. A path has a start point and an end point that are different, depending on the type of path. The time taken for a signal to propagate through a path is referred to as the path delay.</p><h5 id="ww1189038" class="GlossTerm"><span></span>path delay</h5><p id="ww1189039" class="GlossDef"><span></span>Path delay is the time it takes for a signal to propagate through a path.</p><h5 id="ww1189042" class="GlossTerm"><span></span>pattern</h5><p id="ww1189043" class="GlossDef"><span></span>A pattern is a configuration of data values that defines what an event will be or how the event is recognized by the trigger logic of the Reveal core.</p><h5 id="ww1189044" class="GlossTerm"><span></span>pattern comparator</h5><p id="ww1189045" class="GlossDef"><span></span>A pattern comparator is the part of the Reveal core that compares the input pattern to the sampled trigger bus data to see if they match. It is connected to a signal that goes from 0 to 1 to indicate that the comparator has made a match.</p><h5 id="ww1189046" class="GlossTerm"><span></span>PCB</h5><p id="ww1189049" class="GlossDef"><span></span>PCB is an abbreviation for printed circuit board. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189226" title="P">printed circuit board</a>.</p><h5 id="ww1194448" class="GlossTerm"><span></span>.pcf</h5><p id="ww1194449" class="GlossDef"><span></span>A .pcf file is a Power Calculator project file.</p><h5 id="ww1189051" class="GlossTerm"><span></span>PCM</h5><p id="ww1189052" class="GlossDef"><span></span>PCM is an abbreviation for programmable clock manager. It is a special function block that is used to modify or condition clock signals for optimum system performance. Some of the functions that can be performed with the PCM are clock-skew reduction, duty-cycle adjustment, clock multiplication, clock-delay reduction, and clock-phase adjustment. If you use PLC logic resources in conjunction with the PCM, many other functions, such as frequency synthesis, are possible.</p><h5 id="ww1201442" class="GlossTerm"><span></span>PCS</h5><p id="ww1201448" class="GlossDef"><span></span>PCS is an abbreviation for physical coding sublayer, a device layer that is frequently used in defining physical layers for high-speed functions such as the 10 Gb Ethernet and for SERDES applications. The PCS supports advanced system level standards, including RapidIO, Sonet, Gigabit Ethernet, 10 Gb Ethernet, Fibre Channel, and PCI Express. </p><h5 id="ww1189053" class="GlossTerm"><span></span>PCS SERDES</h5><p id="ww1189054" class="GlossDef"><span></span>PCS SERDES is an abbreviation for physical coding sublayer serializer/deserializer. It is the same as a SERDES. See <a href="../../Reference%20Guides/Glossary/glossary.44.18.htm#ww1189468" title="S">SERDES</a>.</p><h5 id="ww1194641" class="GlossTerm"><span></span>period</h5><p id="ww1189065" class="GlossDef"><span></span>A period is the number of steps in a clock pattern multiplied by the step size.</p><h5 id="ww1189067" class="GlossTerm"><span></span>peripheral capacitance</h5><p id="ww1189068" class="GlossDef"><span></span>Peripheral capacitance, also called fringing capacitance, is the extra capacitance between the edges of the top plate of a parallel plate capacitor and its bottom plate.</p><h5 id="ww1189069" class="GlossTerm"><span></span>perspective</h5><p id="ww1189070" class="GlossDef"><span></span>A perspective is a combination of windows, menus, and toolbars in the LatticeMico System graphical user interface that enables you to perform a particular task. For example, the Debug perspective has views that enable you to debug the programs that you created in C++ SPE.</p><h5 id="ww1189071" class="GlossTerm"><span></span>PES</h5><p id="ww1189072" class="GlossDef"><span></span>PES is an abbreviation for programmer’s electronic signature. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189275" title="P">programmer’s electronic signature</a>.</p><h5 id="ww1189076" class="GlossTerm"><span></span>PFF</h5><p id="ww1189077" class="GlossDef"><span></span>PFF is an abbreviation for programmable function unit fast, which is a programmable function unit without RAM.</p><h5 id="ww1189078" class="GlossTerm"><span></span>PFU</h5><p id="ww1189079" class="GlossDef"><span></span>PFU is an abbreviation for programmable function unit. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189254" title="P">programmable function unit (PFU)</a>.</p><h5 id="ww1189086" class="GlossTerm"><span></span>phase-locked loop</h5><p id="ww1189087" class="GlossDef"><span></span>A phase-locked loop (PLL) is an electronic circuit with a voltage- or current-driven oscillator that is constantly adjusted to match in phase and therefore lock on the frequency of an input signal. In addition to stabilizing a particular communications channel (keeping it set to a particular frequency), a PLL can be used to generate a signal, modulate or demodulate a signal, reconstitute a signal with less noise, or multiply or divide a frequency. PLLs are more commonly used for digital data transmission but can also be designed for analog information.</p><h5 id="ww1189088" class="GlossTerm"><span></span>physical design file</h5><p id="ww1189089" class="GlossDef"><span></span>The physical design file is the same as an .ncd file. See <a href="../../Reference%20Guides/Glossary/glossary.44.13.htm#ww1188958" title="N">.ncd</a>.</p><h5 id="ww1189094" class="GlossTerm"><span></span>physical macro</h5><p id="ww1189095" class="GlossDef"><span></span>A physical macro is a logical function that has been created from components of a specific device family. Physical macros are stored in files with the .nmc extension. In addition to components and nets, the file can contain placement information, routing information, or both. A macro can be unplaced, partially placed, or fully placed, and it can also be unrouted, partially routed, or fully routed.</p><h5 id="ww1189096" class="GlossTerm"><span></span>Physical View</h5><p id="ww1189097" class="GlossDef"><span></span>Physical View is a device layout view in Diamond that provides a more detailed small-component floorplan of your design and enables you to view components such as switch boxes and pin wires.</p><h5 id="ww1189103" class="GlossTerm"><span></span>PIC</h5><p id="ww1189104" class="GlossDef"><span></span>PIC is an abbreviation for programmable interface cell. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189260" title="P">programmable interface cell (PIC)</a>.</p><h5 id="ww1208168" class="GlossTerm"><span></span>.pin</h5><p id="ww1208156" class="GlossDef"><span></span>A .pin file is a netlist file containing a generic netlist by pin.</p><h5 id="ww1189109" class="GlossTerm"><span></span>pin</h5><p id="ww1189110" class="GlossDef"><span></span>A pin can be either a symbol pin or a package pin. A symbol pin, also referred to as an instance pin, is the connection point of an instance to a net. A package pin is a physical connector on an integrated circuit package that carries signals into and out of an integrated circuit.</p><h5 id="ww1207992" class="GlossTerm"><span></span>pin layout file</h5><p id="ww1207999" class="GlossDef"><span></span>A pin layout file is a customizable report of pin information for a targeted Lattice device. The report is exported from Diamond’s Spreadsheet View in delimiter-separated text format. The pin layout file can be as simple as a list of available pins, pad names, functions, and banks; or it can include details such as differential polarity, type, user assignments, default attributes, and custom column information. You select the types of information you want included in the file, specify the order of presentation, and select the delimiter to be used as the value separator. The pin layout file can be viewed and edited in an external spreadsheet application; it can then be imported back in to Spreadsheet View.</p><h5 id="ww1201004" class="GlossTerm"><span></span>pin migration</h5><p id="ww1201046" class="GlossDef"><span></span>Pin migration is the process of moving a design’s pin assignments from the current device to a device that is compatible, usually a device a of the same package and family. The process involves finding out which pins in your current device will be unavailable or have different functions when you switch devices. Lattice Diamond makes this information available through the “Incompatible Pins” dialog box in Spreadsheet View and Package View.</p><h5 id="ww1208031" class="GlossTerm"><span></span>pinout file</h5><p id="ww1208051" class="GlossDef"><span></span>A pinout file is a comprehensive report of all device pins in a Lattice targeted device, including available and unbonded pins. It is exported from Diamond’s Spreadsheet View as a comma-separated value file (.csv) and can be examined in an external spreadsheet application.</p><h5 id="ww1189116" class="GlossTerm"><span></span>pin-to-pin delay</h5><p id="ww1189117" class="GlossDef"><span></span>Pin-to-pin delay is delay that is contained within a logic function (intrinsic); that is, it is measured from the transition at the logic gate’s input to its corresponding transition at that gate’s output. Pin-to-pin delay often is mistakenly used interchangably with point-to-point delay.</p><h5 id="ww1189118" class="GlossTerm"><span></span>PIO</h5><p id="ww1189121" class="GlossDef"><span></span>PIO is an abbreviation for programmable I/O cell. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189257" title="P">programmable I/O cell</a>.</p><h5 id="ww1189123" class="GlossTerm"><span></span>pipelining</h5><p id="ww1189124" class="GlossDef"><span></span>Pipelining is the insertion of additional pipeline registers to achieve better clock frequency. Clock latency is introduced in pipelining.</p><h5 id="ww1189127" class="GlossTerm"><span></span>pitch</h5><p id="ww1189128" class="GlossDef"><span></span>Pitch is the center-to-center distance between two parallel wires on a layer at the closest spacing allowed by the design rules.</p><h5 id="ww1201073" class="GlossTerm"><span></span>Place &amp; Route</h5><p id="ww1201077" class="GlossDef"><span></span>Place &amp; Route (PAR) is the post-map process in Lattice Diamond that assigns device-specific components to specific locations on the device floorplan and then establishes physical connections to join the components in an electrical network.</p><h5 id="ww1189134" class="GlossTerm"><span></span>placer</h5><p id="ww1189135" class="GlossDef"><span></span>A placer is a software program that maps logic from a design into specific locations in the target FPGA chip.</p><h5 id="ww1189136" class="GlossTerm"><span></span>placing</h5><p id="ww1189137" class="GlossDef"><span></span>Placing is the process of assigning the device-specific components produced by the mapping process to specific locations on the device.</p><h5 id="ww1189138" class="GlossTerm"><span></span>platform</h5><p id="ww1189142" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.08.htm#ww1188534" title="H">hardware platform</a>.</p><h5 id="ww1189143" class="GlossTerm"><span></span>platform description file</h5><p id="ww1189147" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.12.htm#ww1188926" title="M">.msb</a>.</p><h5 id="ww1189148" class="GlossTerm"><span></span>platform library</h5><p id="ww1189149" class="GlossDef"><span></span>A platform library is a set of files in LatticeMico™ System that contain subroutine code referencing the necessary application files for linking during the build process.</p><h5 id="ww1189150" class="GlossTerm"><span></span>platform library archive (.a) file</h5><p id="ww1189154" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.01.htm#ww1187873" title="Glossary">.a</a>.</p><h5 id="ww1189155" class="GlossTerm"><span></span>platform library build</h5><p id="ww1189156" class="GlossDef"><span></span>The platform library build is an integral part of the managed build process in LatticeMico™ System. Another is the application build. The platform library files contain code that is necessary to the linking during the build process. The platform library build also outputs a platform library archive (&lt;<span style="font-style: italic">platform</span>&gt;.a) file that is referenced by the application build. It allows you to override any default software implementation.</p><h5 id="ww1189157" class="GlossTerm"><span></span>platform library object file</h5><p id="ww1189161" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.14.htm#ww1188998" title="O">.o</a>.</p><h5 id="ww1200536" class="GlossTerm"><span></span>Platform Manager</h5><p id="ww1200597" class="GlossDef"><span></span>Platform Manager is a family of Lattice Semiconductor devices that features programmable analog, with CPLD and FPGA blocks all on one chip to integrate power and digital board management functions. Power management functions include MOSFET OR’ing, hot-swap control, power feed, supply sequencing, monitoring, trimming and margining functions. Digital board management functions include reset distribution, power-on configuration, I2C/SPI interface, fault logging, and glue logic. The Lattice PAC-Designer software is provided as the primary design entry tool for Platform Manager devices. See also <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1200304" title="P">PAC-Designer</a>.</p><h5 id="ww1189162" class="GlossTerm"><span></span>platform settings file</h5><p id="ww1189163" class="GlossDef"><span></span>The platform settings file is the user.pref file that is generated during the build process in LatticeMico System. It contains information on the platform used by the current project.</p><h5 id="ww1231690" class="GlossTerm"><span></span>PLC</h5><p id="ww1231691" class="GlossDef"><span></span>PLC is an abbreviation for programmable logic cell. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189263" title="P">programmable logic cell</a>.</p><h5 id="ww1231695" class="GlossTerm"><span></span>PLD</h5><p id="ww1189170" class="GlossDef"><span></span>PLD is an abbreviation for programmable logic device. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189266" title="P">programmable logic device</a>.</p><h5 id="ww1189174" class="GlossTerm"><span></span>PLL</h5><p id="ww1189177" class="GlossDef"><span></span>PLL is an abbreviation for phased-locked loop. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189086" title="P">phase-locked loop</a>.</p><h5 id="ww1189179" class="GlossTerm"><span></span>PMI</h5><p id="ww1189180" class="GlossDef"><span></span>PMI is an abbreviation for parameterized module interface, which is a method of generating the core description of a module or IP once in the HDL code, then changing parameter values in the HDL code when values need to be changed. It is an alternative to regenerating the module or IP whenever values need to be changed.</p><h5 id="ww1189182" class="GlossTerm"><span></span>point-to-point delay</h5><p id="ww1189183" class="GlossDef"><span></span>Point-to-point delay is delay that occurs between driver gate and load gate (extrinsic); that is, it is measured from the output of the driver gate to the input of the load gate.</p><h5 id="ww1189184" class="GlossTerm"><span></span>polarity</h5><p id="ww1189185" class="GlossDef"><span></span>Polarity is the orientation of a signal, either positive or negative.</p><h5 id="ww1189186" class="GlossTerm"><span></span>POR</h5><p id="ww1189189" class="GlossDef"><span></span>POR is an abbreviation for power-on reset. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1201109" title="P">power-on reset</a></p><h5 id="ww1189191" class="GlossTerm"><span></span>POS</h5><p id="ww1189194" class="GlossDef"><span></span>POS is an abbreviation for product-of-sums. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189249" title="P">product-of-sums</a>.</p><h5 id="ww1189198" class="GlossTerm"><span></span>post-synthesis simulation</h5><p id="ww1189199" class="GlossDef"><span></span>Post-synthesis simulation is a type of simulation that is usually performed after the HDL code has been expanded into gates. Post-synthesis simulation is similar to behavioral simulation, since it checks design behavior. The difference is that in post-synthesis simulation the synthesis tool’s results are checked. If the post-synthesis and behavioral simulations match, the HDL synthesis tool has interpreted the HDL code correctly.</p><h5 id="ww1201113" class="GlossTerm"><span></span>Power Calculator</h5><p id="ww1201129" class="GlossDef"><span></span>Power Calculator is a Lattice Diamond application that estimates the power dissipation for a given design. Power Calculator uses parameters such as voltage, temperature, process variations, air flow, heat sink, resource utilization, activity, and frequency, to calculate the device power consumption. It reports both static and dynamic power consumption. </p><h5 id="ww1201288" class="GlossTerm"><span></span>Power Controller</h5><p id="ww1201289" class="GlossDef"><span></span>Power Controller is a low-power device architectural feature that ensures smooth transitions into and out of standby mode.</p><h5 id="ww1201290" class="GlossTerm"><span></span>Power Guard</h5><p id="ww1201274" class="GlossDef"><span></span>Power Guard is a low-power device architectural feature that controls dynamic power consumption by blocking signals at the input buffers. Power Guard’s biggest impact is in standby mode when it can be used to switch off clock inputs that are distributed using general routing resources.</p><h5 id="ww1200483" class="GlossTerm"><span></span>Power Manager</h5><p id="ww1200487" class="GlossDef"><span></span>Power Manager is a Lattice Semiconductor family of devices that integrates common board power management functions into a single chip for a wide variety of microprocessors and DSPs. Power Manager devices can be programmed in-system through the JTAG interface. The power management algorithm can be designed using the PAC-Designer software. See also <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1200304" title="P">PAC-Designer</a>.</p><h5 id="ww1201109" class="GlossTerm"><span></span>power-on reset</h5><p id="ww1201106" class="GlossDef"><span></span>Power-on reset is a device function that guarantees the state of all registers when the device’s power is initially turned on. Power-on reset also refers to the circuitry that implements the reset.</p><h5 id="ww1189203" class="GlossTerm"><span></span>PPR</h5><p id="ww1201193" class="GlossDef"><span></span>PPR is an abbreviation for programmable pullup resistors. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189269" title="P">programmable pullup resistor</a>.</p><h5 id="ww1201197" class="GlossTerm"><span></span>pre-placed component</h5><p id="ww1201198" class="GlossDef"><span></span>A pre-placed component is a component that is placed in a macro library file.</p><h5 id="ww1189212" class="GlossTerm"><span></span>pre-routed net</h5><p id="ww1189213" class="GlossDef"><span></span>A pre-routed net is a net that is completely routed in a macro library file. When you instantiate a pre-routed macro into a design, the design may require a substantially longer time to place and route, depending on the route complexity.</p><h5 id="ww1189214" class="GlossTerm"><span></span>Precision RTL Synthesis </h5><p id="ww1189215" class="GlossDef"><span></span>Precision® RTL Synthesis is a synthesis tool from Mentor Graphics that can be integrated into the ispLEVER suite. It supports logic synthesis for device designs in VHDL or Verilog.</p><h5 id="ww1189216" class="GlossTerm"><span></span>preferences</h5><p id="ww1189217" class="GlossDef"><span></span>Preferences are constraints that guide the design toward performance goals. They include groups, locations, I/O types, and timing specifications. Preferences are interpreted by the design mapping and place-and-route phases of the flow to assign design logic to physical resources. They can be created and edited using Lattice Diamond’s preference-editing views, or they can be created and edited manually in the logical preference file (.lpf) using a text editor. </p><h5 id="ww1189219" class="GlossTerm"><span></span>.prf</h5><p id="ww1189220" class="GlossDef"><span></span>The .prf file is the physical preference file, an ASCII output of the Map Design process. Preferences saved in the logical preference file (.lpf) are written to the native circuit description (.ncd) and to the .prf file during the map process. The map process rewrites the physical preference file each time it is executed. The .prf file is used as an input file to placement and routing and TRACE.</p><h5 id="ww1189221" class="GlossTerm"><span></span>PRF</h5><p id="ww1189222" class="GlossDef"><span></span>PRF is an abbreviation for programmable resistor fuses, which are the cells that select the programmable pullup resistors. The resistors are sometimes referred to as PRFs.</p><h5 id="ww1189223" class="GlossTerm"><span></span>primitive</h5><p id="ww1189224" class="GlossDef"><span></span>A primitive is a basic gate or logic element, such as an AND, OR, XOR, NAND, or NOR gate; inverter; flip-flop; or latch that is a building block of complex logic functions, such as comparators, multiplexers, TBUFs, and decoders. 2) A logic element that directly corresponds, or maps, to one of these basic elements.</p><h5 id="ww1189226" class="GlossTerm"><span></span>printed circuit board</h5><p id="ww1189227" class="GlossDef"><span></span>A printed circuit board (PCB) is a flat, insulated board of typically 2 to 10 layers to which chips and other electronic components are attached and connected by copper wiring. The main PCB in a system is called a “system board” or “motherboard,” and the smaller boards that plug into the slots in the main board are called “boards” or “cards.”</p><h5 id="ww1189228" class="GlossTerm"><span></span>.prm</h5><p id="ww1189229" class="GlossDef"><span></span>A .prm file is an FPGA report file that shows address mapping information for generated PROM files. The .prm file is generated when you run the PROM File process in Lattice Diamond.</p><h5 id="ww1189230" class="GlossTerm"><span></span>probing</h5><p id="ww1189231" class="GlossDef"><span></span>Probing is the process of examining the states of a device.</p><h5 id="ww1189232" class="GlossTerm"><span></span>process</h5><p id="ww1189233" class="GlossDef"><span></span>A process is the running of concurrent logic blocks. The difference between hardware and software programming is that hardware programming is for concurrent processes and software programming is for linear processes.</p><h5 id="ww1189234" class="GlossTerm"><span></span>process corners</h5><p id="ww1189235" class="GlossDef"><span></span>Process corners are the conditions under which an integrated circuit is manufactured, such as the temperature and voltage. Process corners are specified for fast, typical, and slow conditions to reflect the amount of current handled by the circuit, whether maximum, average, or minimum, respectively. </p><h5 id="ww1189237" class="GlossTerm"><span></span>product term</h5><p id="ww1189238" class="GlossDef"><span></span>A product term is a wired NOR of E2 cells that functions as a large AND gate in a sum-of-products realization.</p><h5 id="ww1189240" class="GlossTerm"><span></span>product term disable</h5><p id="ww1189241" class="GlossDef"><span></span>A product term disable is bits that render a product term permanently low voltage. It is simply a row of cells that are always selected in normal operation. These are different from miser bits that actually disable sense amplifiers to lower power consumption. See also <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189237" title="P">product term</a>.</p><h5 id="ww1189246" class="GlossTerm"><span></span>product term ground</h5><p id="ww1189247" class="GlossDef"><span></span>Product term ground (PTG) is the common ground terminal for a row of E2 cells. For most cells, it is not really at ground but is fed into the sense amplifier. On some cell configurations, PTG is also used for programming and verifying. Other cell types have a separate signal called progPTG for programming.</p><h5 id="ww1189249" class="GlossTerm"><span></span>product-of-sums</h5><p id="ww1189250" class="GlossDef"><span></span>Product-of-sums (POS) is a method of logic representation where the outputs are the product of multiple summing terms. More simply, it is OR-AND logic. By inverting the inputs and outputs, it can be used to represent AND-OR logic for the purposes of reducing logic.</p><h5 id="ww1189251" class="GlossTerm"><span></span>progPTG</h5><p id="ww1189252" class="GlossDef"><span></span>ProgPTG is the programming product term ground, which is the tunneling source for programming E2 cells.</p><h5 id="ww1189254" class="GlossTerm"><span></span>programmable function unit (PFU)</h5><p id="ww1189255" class="GlossDef"><span></span>A programmable function unit (PFU) is a block within the LatticeECP/EC device that implements combinational logic, memory, and registers. The core of the architecture consists of PFU blocks that can be programmed to perform logic, arithmetic, distributed RAM, and distributed ROM functions.</p><h5 id="ww1189257" class="GlossTerm"><span></span>programmable I/O cell</h5><p id="ww1189258" class="GlossDef"><span></span>A programmable I/O cell (PIO) is an architectural element within an FPGA that handles actual input and output functions.</p><h5 id="ww1189260" class="GlossTerm"><span></span>programmable interface cell (PIC)</h5><p id="ww1189261" class="GlossDef"><span></span>A programmable interface cell (PIC) is a cell within the Lattice Semiconductor FPGA device architecture that contains a group of two PIOs. The edges of the architecture consist of PIC blocks that contain two PIOs connected to sysIO buffers. PICs provide high-speed I/O registers and buffering to support a variety of signal interface standards.</p><h5 id="ww1189263" class="GlossTerm"><span></span>programmable logic cell</h5><p id="ww1189264" class="GlossDef"><span></span>A programmable logic cell (PLC) is a cell containing four slices to which logic components can be assigned. PLCs are distributed uniformly across an FPGA.</p><h5 id="ww1189266" class="GlossTerm"><span></span>programmable logic device</h5><p id="ww1189267" class="GlossDef"><span></span>A programmable logic device (PLD) is a prefabricated programmable device containing different types of logic circuits that can be connected in accordance with your specifications. CPLDs and FPGAs are classes of PLDs.</p><h5 id="ww1189269" class="GlossTerm"><span></span>programmable pullup resistor</h5><p id="ww1189270" class="GlossDef"><span></span>A programmable pullup resistor (PPR) is an internal pullup resistor on device input and output pins that can be turned on or off by programming E2 cells known as programmable resistor fuses, or PRFs. The two terms are frequently used interchangeably.</p><h5 id="ww1189272" class="GlossTerm"><span></span>programmable read-only memory</h5><p id="ww1189273" class="GlossDef"><span></span>Programmable read-only memory (PROM) is a permanent memory device that is programmed by the customer rather than by the device manufacturer. It differs from a ROM, which is programmed at the time of manufacture. PROMs have been mostly superseded by EEPROMs, which can be reprogrammed.</p><h5 id="ww1195992" class="GlossTerm"><span></span>Programmer</h5><p id="ww1195993" class="GlossDef"><span></span>Programmer is a tool that supports serial, concurrent (turbo), and microprocessor programming of Lattice devices in PC and Linux environments. Device chains can be scanned automatically using the Programmer graphical user interface. Programmer is integrated into the Diamond software environment, and is also available in a standalone version.</p><h5 id="ww1189275" class="GlossTerm"><span></span>programmer’s electronic signature</h5><p id="ww1189276" class="GlossDef"><span></span>A programmer’s electronic signature (PES) is an internal storage area that provides programming parameters to the programming software. On HD devices, this is only necessary for pLSI (non-ISP) devices.</p><h5 id="ww1204748" class="GlossTerm"><span></span>project</h5><p id="ww1204749" class="GlossDef"><span></span>A project is a collection of all files that are necessary to create and implement a design and download it to the selected device. Each project in Lattice Diamond has a directory, device family, device, and a set of implementations (versions) and strategies. The strategy associated with a given implementation contains options that enable the Lattice Diamond software to display and run the processes appropriate for the targeted device and design flow. In LatticeMico System, a project is the software application code written in C/C++ SPE.</p><h5 id="ww1189282" class="GlossTerm"><span></span>project settings file</h5><p id="ww1189283" class="GlossDef"><span></span>A project settings file is an .xml file in LatticeMico called settings.xml, which contains information about the parent project and its settings, as well as information on the platform referenced by the parent project.</p><h5 id="ww1189284" class="GlossTerm"><span></span>PROM</h5><p id="ww1189285" class="GlossDef"><span></span>PROM is an acronym for programmable read-only memory. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189272" title="P">programmable read-only memory</a>.</p><h5 id="ww1189289" class="GlossTerm"><span></span>PROM file</h5><p id="ww1189290" class="GlossDef"><span></span>A PROM file is a file consisting of one or more bitstream files formed into one or more data streams. The file is formatted in one of three industry-standard formats: Intel MCS86 HEX, Tektronics TEKHEX, or Motorola EXORmacs. The PROM file includes headers that specify the length of the bitstreams, as well as all the framing and control information necessary to configure the FPGAs. It can be used to program one or more devices.</p><h5 id="ww1189291" class="GlossTerm"><span></span>promgen</h5><p id="ww1189292" class="GlossDef"><span></span>Promgen is a command-line program that converts one or more bitstreams into a PROM-formatted file for PROM configuration. It is the equivalent of the PROM File process in Lattice Diamond. The process takes one or more bitstreams files (.bit or .rbt) and creates a PROM image of the bitstream for PROM configuration. When bitstream files are converted to PROM-formatted files (.mcs, .exo, or .tek), the process will also yield a .prm file or PROM image file that includes a memory map to program the PROM.</p><h5 id="ww1189293" class="GlossTerm"><span></span>propagation delay</h5><p id="ww1189294" class="GlossDef"><span></span>Propagation delay (symbolized by tpd) is the time required for a digital signal to travel from the inputs of a logic gate to the output. If all other factors are held constant, the average propagation delay in a logic-gate IC increases as the complexity of the internal circuitry increases. Propagation delay has a direct effect on the speed at which a digital device, such as a computer, can operate.</p><h5 id="ww1189297" class="GlossTerm"><span></span>PT</h5><p id="ww1189301" class="GlossDef"><span></span>PT is an abbreviation for product term. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189237" title="P">product term</a>.</p><h5 id="ww1189302" class="GlossTerm"><span></span>PTD</h5><p id="ww1189305" class="GlossDef"><span></span>PTD is an abbreviation for product term disable. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189240" title="P">product term disable</a>.</p><h5 id="ww1189307" class="GlossTerm"><span></span>PTG</h5><p id="ww1189310" class="GlossDef"><span></span>PTG is an abbreviation for product term ground. See <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189246" title="P">product term ground</a>.</p><h5 id="ww1189312" class="GlossTerm"><span></span>pull-down resistor</h5><p id="ww1189313" class="GlossDef"><span></span>A pull-down resistor is a device or circuit used to reduce the output impedance of a device. It is often a resistor network that holds a device or circuit output at or less than the zero input level of a subsequent digital device in a system.</p><h5 id="ww1189314" class="GlossTerm"><span></span>pull-up resistor</h5><p id="ww1189315" class="GlossDef"><span></span>A pull-up resistor is a device or method used to keep the output voltage of a device at a high level. It is often a resistor network connected to a positive supply voltage.</p><h5 id="ww1189316" class="GlossTerm"><span></span>PUR</h5><p id="ww1189317" class="GlossDef"><span></span>PUR is an abbreviation for power-up set/reset (PUR) signal that, for LatticeECP/EC, LatticeXP, and LatticeSC devices, resets the device on power up as a reset and is active high.</p></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>