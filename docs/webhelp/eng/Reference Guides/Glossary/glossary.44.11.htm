<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>L</title><link rel="Prev" href="glossary.44.10.htm" title="Previous" /><link rel="Next" href="glossary.44.12.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/glossary.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pYI_002bPgG2Gb5tQ2IXcpHmsXw" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Glossary/glossary.44.11.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="glossary.44.01.htm#1195341">Glossary</a> &gt; L</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h2 id="ww1195341" class="Heading1"><span></span>L</h2><h5 id="ww1188691" class="GlossTerm"><span></span>latch</h5><p id="ww1188692" class="GlossDef"><span></span>A latch is a two-state buffer fed by two inputs, D and L. When the L input is low, it acts as a transparent input; in this case, the latch acts as a buffer and outputs the value input by D. When the L input is high, it ignores the D input value.</p><h5 id="ww1188693" class="GlossTerm"><span></span>latch-up</h5><p id="ww1188694" class="GlossDef"><span></span>Latch-up is a condition in which a circuit draws uncontrolled amounts of current across a pn junction, forcing certain voltages up to a certain level and resulting in a degradation of system performance.</p><h5 id="ww1188695" class="GlossTerm"><span></span>latched input</h5><p id="ww1188696" class="GlossDef"><span></span>A latched input is an input that captures asynchronous inputs.</p><h5 id="ww1188698" class="GlossTerm"><span></span>lateral capacitance</h5><p id="ww1188699" class="GlossDef"><span></span>Lateral capacitance is the capacitance between conductors on the same layer.</p><h5 id="ww1188700" class="GlossTerm"><span></span>LATTICE</h5><p id="ww1188701" class="GlossDef"><span></span>LATTICE refers to a type of download cable.</p><h5 id="ww1188704" class="GlossTerm"><span></span>Lattice parallel port</h5><p id="ww1188705" class="GlossDef"><span></span>The Lattice parallel port is a port for a Lattice download cable.</p><h5 id="ww1197604" class="GlossTerm"><span></span>Lattice Synthesis Engine</h5><p id="ww1200040" class="GlossDef"><span></span>Lattice Synthesis Engine (LSE) is the synthesis tool that is integrated with the Lattice Diamond software for supported device families, including MachXO, MachXO2, and Platform Manager. See also <a href="../../Reference%20Guides/Glossary/glossary.44.11.htm#ww1200067" title="L">.ldc</a>.</p><h5 id="ww1197096" class="GlossTerm"><span></span>LatticeCORE IP module</h5><p id="ww1197086" class="GlossDef"><span></span>A LatticeCORE IP module is a Lattice Semiconductor large modular design block that implements popular industry-standard functions. It can be reused and easily placed within a programmable logic design. Lattice Semiconductor LatticeCORE IP modules are optimized for use with the Lattice Semiconductor device families.</p><h5 id="ww1188706" class="GlossTerm"><span></span>LatticeEC</h5><p id="ww1188707" class="GlossDef"><span></span>LatticeEC (EConomy) is a family of Lattice FPGA devices characterized by low cost, LUT-based logic, distributed and embedded memory, PLLs and support for mainstream I/Os, and dedicated DDR memory interface logic without dedicated function blocks.</p><h5 id="ww1188708" class="GlossTerm"><span></span>LatticeECP</h5><p id="ww1188709" class="GlossDef"><span></span>LatticeECP (EConomyPlus) is a family of Lattice Semiconductor FPGA devices that combines the optimized LatticeEC fabric with dedicated high-performance DSP blocks on-chip tailored for the implementation of common DSP functions. It also features LUT-based logic, distributed and embedded memory, PLLs, support for mainstream I/Os, and dedicated DDR memory interface logic.</p><h5 id="ww1188710" class="GlossTerm"><span></span>LatticeECP2</h5><p id="ww1188714" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.11.htm#ww1188716" title="L">LatticeECP2/M</a>.</p><h5 id="ww1188716" class="GlossTerm"><span></span>LatticeECP2/M</h5><p id="ww1188717" class="GlossDef"><span></span>LatticeECP2/M (EConomyPlus second generation) is a family of Lattice Semiconductor FPGA devices based on 90-nanometer technology and characterized by advanced DSP blocks, high-speed SERDES with PCS (LatticeECP2M family only), high-speed source synchronous interfaces, LUT-based logic, distributed and embedded memory, phase-locked loops (PLLs), delay-locked loops (DLLs), pre-engineered source synchronous I/O support, enhanced sysDSP blocks, and advanced configuration support, including dual boot capabilities.</p><h5 id="ww1188718" class="GlossTerm"><span></span>LatticeECP2MS</h5><p id="ww1188719" class="GlossDef"><span></span>LatticeECP2MS devices are the same as LatticeECP2M devices but they also include security encryption of the bitstream. See <a href="../../Reference%20Guides/Glossary/glossary.44.11.htm#ww1188716" title="L">LatticeECP2/M</a>.</p><h5 id="ww1188723" class="GlossTerm"><span></span>LatticeECP2S</h5><p id="ww1188724" class="GlossDef"><span></span>LatticeECP2S devices are the same as LatticeECP2 devices but they also include security encryption of the bitstream. See <a href="../../Reference%20Guides/Glossary/glossary.44.11.htm#ww1188716" title="L">LatticeECP2/M</a>.</p><h5 id="ww1197373" class="GlossTerm"><span></span>LatticeECP3</h5><p id="ww1197389" class="GlossDef"><span></span>LatticeECP3 is a family of Lattice Semiconductor FPGA devices that offers multi-protocol 3.2G SERDES with XAUI jitter compliance, DDR3 memory interfaces, DSP capabilities, high density on-chip memory and up to 149K LUTS, with low power consumption.</p><h5 id="ww1197446" class="GlossTerm"><span></span>LatticeMico System</h5><p id="ww1197458" class="GlossDef"><span></span>LatticeMico System is a set of tools that are used to implement a soft microcontroller and attached peripheral components in a Lattice FPGA device. It is based on the Eclipse C/C++ Development Tools (CDT) environment, an industry open-source development and application framework for building software. The two integrated tools in LatticeMico System are used in combination with the Lattice Diamond software to coordinate the building of an embedded processor system on an FPGA device and write the software to drive it. See also <a href="../../Reference%20Guides/Glossary/glossary.44.12.htm#ww1188928" title="M">MSB</a> and <a href="../../Reference%20Guides/Glossary/glossary.44.18.htm#ww1197467" title="S">SPE</a>.</p><h5 id="ww1197455" class="GlossTerm"><span></span>LatticeSC</h5><p id="ww1188729" class="GlossDef"><span></span>LatticeSC is a family of Lattice Semiconductor FPGA devices characterized by a high-performance FPGA fabric, high-speed SERDES with embedded advance PCS (physical coding sub-layer), high-performance I/Os, up to 7.8 megabits of sysMEM embedded block RAM, and dedicated logic to support system level standards, such as RAPIDIO, SPI4.2, SFI-4, UTOPIA, XGMII, and CSIX. The devices in this family feature clock multiply, divide, and phase-shift PLLs, numerous DLLs, and dynamic glitch-free clock MUXs.</p><h5 id="ww1188730" class="GlossTerm"><span></span>LatticeSCM</h5><p id="ww1188731" class="GlossDef"><span></span>LatticeSCM is a family of Lattice Semiconductor FPGA devices characterized by the same features as LatticeSC devices but that also include MACO (masked array for cost optimization): up to 12 embedded structured ASIC blocks per device with a variety of pre-engineered IP blocks.</p><h5 id="ww1188732" class="GlossTerm"><span></span>LatticeXP</h5><p id="ww1188733" class="GlossDef"><span></span>LatticeXP (eXpanded Programmability) is a family of Lattice Semiconductor FPGA devices that combines the optimized FPGA architecture used in the LatticeEC (EConomy) family with the ispXP technology in a single low-cost chip. It is implemented on a low-cost, 130-nm flash process to provide instant-on, high-security, non-volatile, and reconfigurable features.</p><h5 id="ww1188734" class="GlossTerm"><span></span>LatticeXP2 </h5><p id="ww1188735" class="GlossDef"><span></span>LatticeXP2 (eXpanded Programmability second generation) is a family of Lattice Semiconductor FPGA devices that combine a look-up table (LUT)-based FPGA fabric with flash non-volatile cells in an architecture referred to as flexiFLASH. FlexiFLASH features instant-on, small footprint, on-chip storage with FlashBAK-embedded block memories and Serial TAG memory and design security. LatticeXP2 parts also support live updates with TransFR, 128-bit AES encryption, and dual-boot technologies. They include LUT-based logic, distributed and embedded memory, phase locked loops (PLLs), pre-engineered source synchronous I/O, and enhanced sysDSP blocks.</p><h5 id="ww1188736" class="GlossTerm"><span></span>LBE</h5><p id="ww1188737" class="GlossDef"><span></span>LBE is an abbreviation for logic block editor, which is a module in EPIC that enables you to edit the logic of a selected component to one of its present configuration modes.</p><h5 id="ww1188738" class="GlossTerm"><span></span>.lci</h5><p id="ww1188739" class="GlossDef"><span></span>The .lci file is the constraint file, a flat ASCII file that is used to specify optimization options and hardware-specific parameters and is read by the Diamond software.</p><h5 id="ww1188740" class="GlossTerm"><span></span>ldbanno</h5><p id="ww1188741" class="GlossDef"><span></span>Ldbanno is a command-line program that distributes the physical design information back to the logical design to generate a timing simulation file. The ldbanno program back annotates physical information (for example, net delays) to the logical design and then writes out the back-annotated design in the desired netlist format. The ldbanno program is equivalent to the Design &gt; Back Annotate Assignments command in Lattice Diamond.</p><h5 id="ww1200067" class="GlossTerm"><span></span>.ldc</h5><p id="ww1200068" class="GlossDef"><span></span>An .ldc file is a constraint file used with the Lattice Synthesis Engine for integrated synthesis. The .ldc file uses the same constraint format as the Synopsys Design Constraint (SDC) language. An .ldc file can be edited in the LDC Editor as well as a text editor. See also <a href="../../Reference%20Guides/Glossary/glossary.44.18.htm#ww1194802" title="S">SDC</a> and <a href="../../Reference%20Guides/Glossary/glossary.44.18.htm#ww1202325" title="S">synthesis constraint file</a>.</p><h5 id="ww1200115" class="GlossTerm"><span></span>LDC Editor</h5><p id="ww1200159" class="GlossDef"><span></span>The LDC Editor is a Lattice Diamond application for editing Lattice Design Constraint (.ldc) files.</p><h5 id="ww1197125" class="GlossTerm"><span></span>.ldf</h5><p id="ww1197130" class="GlossDef"><span></span>An .ldf file is a Lattice Diamond project file.</p><h5 id="ww1188743" class="GlossTerm"><span></span>level-sensitive signal</h5><p id="ww1188744" class="GlossDef"><span></span>A level-sensitive signal is an input that only affects a function when it is at 1 or 0, and not when it transitions from one logic value to another. See also <a href="../../Reference%20Guides/Glossary/glossary.44.05.htm#ww1188333" title="E">edge-sensitive signal</a>.</p><h5 id="ww1188748" class="GlossTerm"><span></span>LFSR</h5><p id="ww1188749" class="GlossDef"><span></span>LFSR is an abbreviation for linear feedback shift register, which is a shift register with feedback from two or more points in the register chain. The points are called taps. LSFRs are particularly useful in encryption and decryption applications.</p><h5 id="ww1188750" class="GlossTerm"><span></span>.lib</h5><p id="ww1204454" class="GlossDef"><span></span>The .lib file, is a collection of library elements compatible with most Lattice FPGA device families. Libraries of symbols can be managed using the Symbol Library Manager in Lattice Diamond.</p><h5 id="ww1204456" class="GlossTerm"><span></span>library</h5><p id="ww1204457" class="GlossDef"><span></span>A library is a set of macros, such as adders, buffers, and flip-flops, used to create schematic designs.</p><h5 id="ww1188756" class="GlossTerm"><span></span>Linux</h5><p id="ww1188757" class="GlossDef"><span></span>Linux is the UNIX operating system adapted to personal computers. See <a href="../../Reference%20Guides/Glossary/glossary.44.20.htm#ww1189802" title="U">UNIX</a>.</p><h5 id="ww1188761" class="GlossTerm"><span></span>load</h5><p id="ww1188762" class="GlossDef"><span></span>A load is the resistance, capacitance, or both associated with the inputs of one or more devices driven by an output.</p><h5 id="ww1188769" class="GlossTerm"><span></span>lock constraint</h5><p id="ww1188770" class="GlossDef"><span></span>A lock constraint locks a component. A pin lock constraint specifies that the current routing cannot be changed or unrouted.</p><h5 id="ww1200789" class="GlossTerm"><span></span>LogiBuilder</h5><p id="ww1200779" class="GlossDef"><span></span>LogiBuilder is a utility within the Lattice PAC-Designer software that allows you to define a power supply sequence controller and monitor or other control circuits using Power Manager or Platform Manager devices. See also <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1200483" title="P">Power Manager</a> and <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1200536" title="P">Platform Manager</a>.</p><h5 id="ww1188771" class="GlossTerm"><span></span>logic</h5><p id="ww1188772" class="GlossDef"><span></span>Logic is one of the three major classes of ICs in most digital electronic systems: microprocessors, memory, and logic. Logic is used for data manipulation and control functions that require higher speed than a microprocessor can provide.</p><h5 id="ww1188773" class="GlossTerm"><span></span>logic analysis</h5><p id="ww1188774" class="GlossDef"><span></span>Logic analysis is the process of capturing digital data from a device so that you can observe the behavior of the signals and locate any failures in the device. It includes the ability to trigger on a complicated sequence of digital events, copy a large amount of digital data from the device under test through the device’s JTAG ports, and display the data in a graphical user interface.</p><h5 id="ww1188775" class="GlossTerm"><span></span>logic analysis core</h5><p id="ww1188776" class="GlossDef"><span></span>A logic analysis core is a precharacterized piece of logic (intellectual property) specifically designed for logic analysis. See also <a href="../../Reference%20Guides/Glossary/glossary.44.17.htm#ww1189370" title="R">Reveal core</a>.</p><h5 id="ww1200801" class="GlossTerm"><span></span>Logic Block View</h5><p id="ww1200805" class="GlossDef"><span></span>Logic Block View is a view within the Lattice Diamond software that enables you to examine the logic details of one or selected components that have been placed and routed. Logic Block View can be accessed from Floorplan View, Physical View, and NCD View.</p><h5 id="ww1188780" class="GlossTerm"><span></span>logic cell</h5><p id="ww1188781" class="GlossDef"><span></span>A logic cell is a predefined group of unconnected components that are replicated across the surface of a gate array. It is also called a basic cell. Sometimes PFUs are referred to as the logic cell because they are the major physical portion of the cell.</p><h5 id="ww1188782" class="GlossTerm"><span></span>logic circuit</h5><p id="ww1188783" class="GlossDef"><span></span>A logic circuit is a set of components that performs a processing or controlling function.</p><h5 id="ww1188784" class="GlossTerm"><span></span>logic element</h5><p id="ww1188785" class="GlossDef"><span></span>A logic element is a building block defining the logic in a design. These elements are typically primitives—that is, flip-flops, AND gates, OR gates, NOR gates, and so forth—or macros, which are higher-level combinations of primitives.</p><h5 id="ww1188786" class="GlossTerm"><span></span>logic function</h5><p id="ww1188787" class="GlossDef"><span></span>A logic function is any Boolean logic expression or set of expressions implemented by using a single logic gate or a complex component containing many logic gates used on an integrated circuit.</p><h5 id="ww1188788" class="GlossTerm"><span></span>logic gate</h5><p id="ww1188789" class="GlossDef"><span></span>A logic gate is the physical implementation of a logic function.</p><h5 id="ww1188790" class="GlossTerm"><span></span>logic optimization</h5><p id="ww1188791" class="GlossDef"><span></span>Logic optimization is the process of decreasing the area or increasing the speed of a design.</p><h5 id="ww1188792" class="GlossTerm"><span></span>logic synthesis</h5><p id="ww1188793" class="GlossDef"><span></span>Logic synthesis is the process of starting from a high level of logic abstraction (typically Verilog or VHDL) and automatically creating a lower level of logic abstraction using a library containing primitives.</p><h5 id="ww1188799" class="GlossTerm"><span></span>logical diagram</h5><p id="ww1188800" class="GlossDef"><span></span>A logical diagram is a schematic that shows component connections with nets and other components in a functional or logical manner.</p><h5 id="ww1188802" class="GlossTerm"><span></span>lookup table (LUT)</h5><p id="ww1188803" class="GlossDef"><span></span>A lookup table (LUT) is an architectural element within a LatticeECP/EC PFU for implementing combinational logic or memory.</p><h5 id="ww1188804" class="GlossTerm"><span></span>.lpc</h5><p id="ww1188805" class="GlossDef"><span></span>The .lpc file is the Lattice Semiconductor parameter configuration file, which contains the configuration parameters that you selected in IPexpress.</p><h5 id="ww1188807" class="GlossTerm"><span></span>.lpf</h5><p id="ww1188808" class="GlossDef"><span></span>The logical preference file (.lpf) is a post-synthesis source file for storing design constraints known as preferences. This file is automatically generated when you create a new project in Lattice Diamond, and it is used as input for developing and implementing the design. The .lpf file can be edited in one of Diamond’s preference-editing views such as Spreadsheet View or in a text editor. See also <a href="../../Reference%20Guides/Glossary/glossary.44.18.htm#ww1201484" title="S">Spreadsheet View</a>.</p><h5 id="ww1200054" class="GlossTerm"><span></span>LSE</h5><p id="ww1200058" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.11.htm#ww1197604" title="L">Lattice Synthesis Engine</a>.</p><h5 id="ww1188814" class="GlossTerm"><span></span>LSR </h5><p id="ww1188815" class="GlossDef"><span></span>LSR is an abbreviation for a local set/reset signal. In LatticeECP/EC, LatticeXP, and LatticeSC devices, a low signal on the local set reset (LSR) input pin of the LSR component initializes all flip-flops and latches.</p><h5 id="ww1188816" class="GlossTerm"><span></span>lumped capacitance</h5><p id="ww1188817" class="GlossDef"><span></span>Lumped capacitance is the total capacitance of a net or segment of a net.</p><h5 id="ww1188818" class="GlossTerm"><span></span>LUT</h5><p id="ww1188821" class="GlossDef"><span></span>LUT is an acronym for lookup table. See <a href="../../Reference%20Guides/Glossary/glossary.44.11.htm#ww1188802" title="L">lookup table (LUT)</a>.</p><h5 id="ww1188823" class="GlossTerm"><span></span>LVDS</h5><p id="ww1188824" class="GlossDef"><span></span>LVDS is an acronym for low-voltage differential signaling, a high-speed, low-power data transmission standard. LVDS is standardized in the ANSI/TIA/EIA-644-1995 electrical characteristics standard. LVDS is a generic interface standard for high-speed data transmission.</p><h5 id="ww1188825" class="GlossTerm"><span></span>LVPECL</h5><p id="ww1188826" class="GlossDef"><span></span>LVPECL is an acronym for low-voltage positive emitter-coupled logic. An LVPECL is a digital circuit composed of bipolar transistors in which the emitter ends are wired together. It uses a low-voltage power supply rather than the more common negative power supply.</p></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>