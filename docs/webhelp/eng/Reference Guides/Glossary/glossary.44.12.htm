<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>M</title><link rel="Prev" href="glossary.44.11.htm" title="Previous" /><link rel="Next" href="glossary.44.13.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/glossary.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pkewGKZK8hDTsQZzUHuptBw" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Glossary/glossary.44.12.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="glossary.44.01.htm#1188828">Glossary</a> &gt; M</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h2 id="ww1188828" class="Heading1"><span></span>M</h2><h5 id="ww1188829" class="GlossTerm"><span></span>MAC</h5><p id="ww1188830" class="GlossDef"><span></span>MAC is an acronym for multiply accumulates, which is the FIR operation of multiplying a coefficient by the corresponding delayed data sample and accumulating the result.</p><h5 id="ww1188831" class="GlossTerm"><span></span>MachXO</h5><p id="ww1188832" class="GlossDef"><span></span>MachXO is a family of Lattice Semiconductor programmable logic devices that combines 256 to 2280 optimized look-up table (LUT) components with Lattice Semiconductor’s ispXP technology. It provides high pin-to-pin performance and instant-on associated with CPLDs and the flexibility of FPGAs. This family provides 73 to 271 I/Os with extensive package options in a low-cost device.</p><h5 id="ww1200186" class="GlossTerm"><span></span>MachXO2</h5><p id="ww1200209" class="GlossDef"><span></span>MachXO2 is a family of Lattice Semiconductor programmable logic devices that combines an optimized look-up table (LUT) architecture with 65-nm embedded Flash process technology. MachXO2 devices include hardened versions of commonly used functions such as User Flash Memory (UFM), I2C, SPI and timer/counter. Architectural features are included that help manage static and dynamic power consumption: programmable low swing differential I/Os and the capability of turning off I/O banks, on-chip PLLs, and oscillators dynamically.</p><h5 id="ww1188833" class="GlossTerm"><span></span>MACO</h5><p id="ww1188834" class="GlossDef"><span></span>MACO is a technology that enables ASIC gates to be put into an FPGA device using a few layers of metal.</p><h5 id="ww1193897" class="GlossTerm"><span></span>MACO block</h5><p id="ww1193898" class="GlossDef"><span></span>A MACO block is the portion of the MACO hard IP that is assigned to a MACO site. If the MACO IP consumes only one MACO site, the MACO block and MACO hard IP are the same.</p><h5 id="ww1193893" class="GlossTerm"><span></span>MACO default timing model</h5><p id="ww1193894" class="GlossDef"><span></span>The MACO default timing model is the timing data for the MACO block boundary timing. It includes setup and clock_to_out based on conservative clock injection delay.</p><h5 id="ww1193888" class="GlossTerm"><span></span>MACO hard HDL</h5><p id="ww1193889" class="GlossDef"><span></span>MACO hard HDL is the HDL that forms a MACO block.</p><h5 id="ww1193890" class="GlossTerm"><span></span>MACO hard IP</h5><p id="ww1193885" class="GlossDef"><span></span>MACO hard IP is the portion of a MACO IP that is implemented using MACO technology.</p><h5 id="ww1193880" class="GlossTerm"><span></span>MACO logical port</h5><p id="ww1193881" class="GlossDef"><span></span>A MACO logical port is the port MACO block. It is mapped to a MACO physical port (MACO site pin).</p><h5 id="ww1193875" class="GlossTerm"><span></span>MACO physical port</h5><p id="ww1193876" class="GlossDef"><span></span>A MACO physical port is the pin on the MACO site.</p><h5 id="ww1193877" class="GlossTerm"><span></span>MACO routing</h5><p id="ww1188848" class="GlossDef"><span></span>MACO routing is the dedicated routing to and from the MACO site. It is a fast but highly restrictive resource. There are three types: MACO_PIO_routing, MACO_EBR_routing, and MACO_FPGA_routing.</p><h5 id="ww1188849" class="GlossTerm"><span></span>MACO site</h5><p id="ww1188850" class="GlossDef"><span></span>A MACO site is a physical site on the device where MACO hard IP gates can be placed.</p><h5 id="ww1188851" class="GlossTerm"><span></span>MACO soft HDL</h5><p id="ww1188852" class="GlossDef"><span></span>MACO soft HDL is the portion of a MACO IP that is implemented using standard FPGA resources, such as PIOs, EBRs, SLICEs, or PLLs/DLLs. It refers to the minimum FPGA design required to interface to the MACO hard IP.</p><h5 id="ww1188853" class="GlossTerm"><span></span>macro</h5><p id="ww1188854" class="GlossDef"><span></span>A macro is 1) a component composed of nets and primitives, flip-flops, or latches that implements high-level functions, such as adders, subtractors, and dividers. Soft macros and relationally placed macros (RPMs) are types of macros. 2) A control language built into ORCAstra that can be used to automate some operations. See also <a href="../../Reference%20Guides/Glossary/glossary.44.14.htm#ww1194744" title="O">ORCAstra</a>.</p><h5 id="ww1188855" class="GlossTerm"><span></span>macro instance</h5><p id="ww1188856" class="GlossDef"><span></span>A macro instance is a copy of a macro library file inserted in a design file. When you add a macro instance to a design you instantiate the macro. A design may contain multiple instances of the same library file, and each will receive a unique name. Since the library file is copied into the design file when you instantiate a macro, if you then change the library file the changes will not be reflected in the macro instantiated in the design file. In the EPIC User’s Guide, the word macro may be used instead of macro instance. A macro library file will always be referred to as a “macro library file.” A macro can only be added if the design file and the macro library file you are adding are of the same device family.</p><h5 id="ww1188857" class="GlossTerm"><span></span>macro library file</h5><p id="ww1188858" class="GlossDef"><span></span>A macro library file is a file containing the definition of a macro. Macro library files, which have an .nmc extension, are created and edited in EPIC, operating in macro mode. See also <a href="../../Reference%20Guides/Glossary/glossary.44.15.htm#ww1189094" title="P">physical macro</a>.</p><h5 id="ww1188862" class="GlossTerm"><span></span>macro mode</h5><p id="ww1188863" class="GlossDef"><span></span>Macro mode is the set of EPIC options available while you work on a physical macro. To be in macro mode, you must have a physical macro file (.nmc) loaded by either opening or creating one.</p><h5 id="ww1188866" class="GlossTerm"><span></span>makefiles</h5><p id="ww1188867" class="GlossDef"><span></span>Makefiles are files in LatticeMico System that contain scripts that define what files the make utility must use to compile and link during the build process. There are many makefiles employed in the LatticeMico System build process. The makefile file is the application build makefile, calling all of the other makefiles that allow the generation and build of the platform library and for eventually generating the final executable image.</p><h5 id="ww1188868" class="GlossTerm"><span></span>Manhattan routing</h5><p id="ww1188869" class="GlossDef"><span></span>Manhattan routing is rectilinear routing, that is, routing in which all the routing tracks are perpendicular to one other.</p><h5 id="ww1188870" class="GlossTerm"><span></span>manual placement</h5><p id="ww1188871" class="GlossDef"><span></span>Manual placement is the process of placing components and macros in the EPIC Editing area by using the place command. When you use manual placement, you select both a source component or macro and the destination site in which to place the component or macro.</p><h5 id="ww1188872" class="GlossTerm"><span></span>manual routing</h5><p id="ww1188873" class="GlossDef"><span></span>Manual routing is the process of routing the connections between components in the EPIC Editing area by using the route command. When you use the route command, you specify the path the signal routing will take by selecting the net pins or pinwires to be connected and the routing resources to be used (for example, long lines, local lines). After executing the command, the system routes the path you have specified.</p><h5 id="ww1188875" class="GlossTerm"><span></span>map</h5><p id="ww1188876" class="GlossDef"><span></span>Map is a command-line program that maps a design to an FPGA. It is equivalent to the Map Design process in Lattice Diamond. The input to the map program is one or more EDIF netlists. The output is a physical design (.ncd file), which is a physical description of the components in the target architecture.</p><h5 id="ww1200820" class="GlossTerm"><span></span>map register retiming</h5><p id="ww1200839" class="GlossDef"><span></span>Map register retiming is a technique for improving timing by moving registers across logic to shift the path delay from one side of a register to the other side.</p><h5 id="ww1188882" class="GlossTerm"><span></span>mapping</h5><p id="ww1188883" class="GlossDef"><span></span>Mapping is the process of converting a design represented as a logical network of device-independent components, such as gates and flip-flops, into a network of device-specific components, such as programmable functional units</p><h5 id="ww1188884" class="GlossTerm"><span></span>master port</h5><p id="ww1188885" class="GlossDef"><span></span>A master port is a port that can initiate read and write transactions.</p><h5 id="ww1188886" class="GlossTerm"><span></span>master symbol</h5><p id="ww1194425" class="GlossDef"><span></span>A master symbol is a schematic symbol used for title blocks, logos, revision blocks, and other standardized graphic symbols.</p><h5 id="ww1194426" class="GlossTerm"><span></span>MATLAB/Simulink</h5><p id="ww1194427" class="GlossDef"><span></span>MATLAB/Simulink is a third-party tool from The Mathworks® that provides an interactive graphical environment and a customizable set of block libraries that enable you to accurately design, simulate, implement, and test control, signal processing, communications, and other time-varying systems.</p><h5 id="ww1188890" class="GlossTerm"><span></span>maximum event counter</h5><p id="ww1188891" class="GlossDef"><span></span>The maximum event counter in Reveal Inserter and Reveal Logic Analyzer determines the maximum size of the count in the trigger expression. The count is how many times a sequence must occur before a THEN statement.</p><h5 id="ww1188892" class="GlossTerm"><span></span>maximum sequence depth</h5><p id="ww1188893" class="GlossDef"><span></span>The maximum sequence depth is the maximum number of sequences that can be used in a trigger expression in Reveal Inserter and Reveal Logic Analyzer. Sequences are sequential states connected by THEN operators. </p><h5 id="ww1188895" class="GlossTerm"><span></span>.mcs</h5><p id="ww1188896" class="GlossDef"><span></span>The .mcs file is a PROM-formatted configuration file in Intel MCS-86 format. It is generated when you run the PROM File process in Lattice Diamond or the promgen command-line program.</p><h5 id="ww1188897" class="GlossTerm"><span></span>MCS-86</h5><p id="ww1188898" class="GlossDef"><span></span>MCS-86 is a PROM file format from Intel. </p><h5 id="ww1188899" class="GlossTerm"><span></span>.mem</h5><p id="ww1188900" class="GlossDef"><span></span>The .mem file is the memory initialization file in ASCII format that contains memory contents for a module. It is the input for FPGA module generation. It consists of lines of addresses with corresponding data, all in hexadecimal format. If a memory file is not used, all the RAM contents are initialized to 0. This file is invisible when you generate FPGA modules with IPexpress.</p><h5 id="ww1188901" class="GlossTerm"><span></span>.men (epic)</h5><p id="ww1188902" class="GlossDef"><span></span>The .men (epic) file is a customizable EPIC menu bar and pull-down menu definitions file in $FOUNDRY/data, where $FOUNDRY is the path pointed to or defined by the $FOUNDRY environment variable.</p><h5 id="ww1203185" class="GlossTerm"><span></span>Mico System Builder</h5><p id="ww1203189" class="GlossDef"><span></span>See <a href="../../Reference%20Guides/Glossary/glossary.44.12.htm#ww1188928" title="M">MSB</a>.</p><h5 id="ww1188908" class="GlossTerm"><span></span>.mif</h5><p id="ww1188909" class="GlossDef"><span></span>A .mif file is a memory image file output for FPGA module generation. It is used to initialize memory in SmartModels. This file is invisible when you generate modules with the IPexpress.</p><h5 id="ww1188910" class="GlossTerm"><span></span>mixed mode</h5><p id="ww1188911" class="GlossDef"><span></span>Mixed mode describes operation in the digital and analog domains, such as mixed-mode simulation.</p><h5 id="ww1188912" class="GlossTerm"><span></span>mixed-mode design</h5><p id="ww1188913" class="GlossDef"><span></span>Mixed-mode design is a design that consists of both schematic and non-schematic blocks.</p><h5 id="ww1188914" class="GlossTerm"><span></span>mixed-signal</h5><p id="ww1188915" class="GlossDef"><span></span>Mixed-signal describes electronic circuits that include both analog and digital sections.</p><h5 id="ww1188916" class="GlossTerm"><span></span>ModelSim Lattice FPGA Edition</h5><p id="ww1188917" class="GlossDef"><span></span>ModelSim Lattice FPGA Edition is a simulation tool from Siemens that supports Verilog and VHDL simulation and verification. It is included with the Diamond software.</p><h5 id="ww1188918" class="GlossTerm"><span></span>module</h5><p id="ww1188919" class="GlossDef"><span></span>A module is an expanded symbol generated from parameters representing the desired size and operating modes of the symbol.</p><h5 id="ww1203211" class="GlossTerm"><span></span>MPARTRCE</h5><p id="ww1203205" class="GlossDef"><span></span>MPARTRCE is a multiple place and route (multi-PAR) program that uses a performance score for selecting the best place &amp; route iteration. It is available from the command line.</p><h5 id="ww1188920" class="GlossTerm"><span></span>.mrp</h5><p id="ww1188921" class="GlossDef"><span></span>The . mrp file is an FPGA report file that contains mapping information. The .mrp file lists any DRC errors found in the design and provides details about how the design was mapped (for example, the schematic constraints specified, the logic that was removed or added, and how signals and symbols in the logical design were mapped into signals and components in the physical design). The .mrp file is generated when you run the Map Design process in Lattice Diamond. See also <a href="../../Reference%20Guides/Glossary/glossary.44.12.htm#ww1188875" title="M">map</a>.</p><h5 id="ww1188926" class="GlossTerm"><span></span>.msb</h5><p id="ww1188927" class="GlossDef"><span></span>An .msb file is an XML-format file output by Mico System Builder (MSB).</p><h5 id="ww1188928" class="GlossTerm"><span></span>MSB</h5><p id="ww1188929" class="GlossDef"><span></span>MSB is an abbreviation for Mico System Builder, which is an integrated development environment based on Eclipse for choosing components, such as a memory controller and serial interface, to attach to the Lattice Semiconductor 32-bit embedded microprocessor. It also enables you to specify the connectivity between these elements. MSB then enables you to generate a top-level design that includes the microprocessor and the chosen components. It uses the same graphical user interface as C/C++ SPE. See also <a href="../../Reference%20Guides/Glossary/glossary.44.18.htm#ww1197467" title="S">SPE</a>.</p><h5 id="ww1188934" class="GlossTerm"><span></span>multiplexer</h5><p id="ww1188935" class="GlossDef"><span></span>A multiplexer, or mux, is a device that combines several electrical signals into a single signal.</p><h5 id="ww1188936" class="GlossTerm"><span></span>multiplexing/demultiplexing</h5><p id="ww1188937" class="GlossDef"><span></span>Multiplexing is the process by which two or more signals are transmitted over a single communications channel. Demultiplexing is the separation of two or more channels previously multiplexed.</p><h5 id="ww1188938" class="GlossTerm"><span></span>mux</h5><p id="ww1188942" class="GlossDef"><span></span>Mux is an abbreviation of “multiplexer.” See <a href="../../Reference%20Guides/Glossary/glossary.44.12.htm#ww1188934" title="M">multiplexer</a>.</p></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>