<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>syn_keep</title><link rel="Prev" href="syn_insert_pad.htm" title="Previous" /><link rel="Next" href="syn_maxfan_hdl_attribute.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/lse_constraints_directives.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pdaDTW7y5QFjlNl4fGMa_002bKQ" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Constraints%20Ref/syn_keep_hdl_directive.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Constraints_Reference_Guide.htm#1019054">Constraints Reference Guide</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="lattice_synthesis_engine_constraints.htm#1019054">Lattice Synthesis Engine (LSE) Constraints</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="HDL%20Attributes%20and%20Directives.htm#1019054">Lattice Synthesis Engine-Supported HDL Attributes</a> &gt; syn_keep</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1019054" class="Heading3"><span></span>syn_keep</h4><p id="ww998496" class="BodyAfterHead"><span></span>This attribute keeps the specified net intact during optimization and synthesis.</p><h5 id="ww998497" class="HeadingRunIn"><span></span>Verilog Syntax</h5><p id="ww998498" class="BodyAfterHead"><span></span>object /* synthesis syn_keep = 1 */ ;</p><p id="ww998499" class="Body"><span></span>where <span style="font-style: italic">object</span> is a wire or reg declaration. Make sure that there is a space between the object name and the beginning of the comment slash (/).</p><h5 id="ww998518" class="HeadingRunIn"><span></span>Verilog Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1037819" class="Code">module syn_keep1(</pre><pre id="ww1037820" class="Code">				input a,</pre><pre id="ww1037821" class="Code">				input b,</pre><pre id="ww1037822" class="Code">				input clk,</pre><pre id="ww1037823" class="Code">				output q1,</pre><pre id="ww1037824" class="Code">				output q2);				</pre><pre id="ww1037825" class="Code">	reg temp1;</pre><pre id="ww1037826" class="Code">	reg temp2;</pre><pre id="ww1037827" class="Code">	reg q1;</pre><pre id="ww1037828" class="Code">	reg q2;</pre><pre id="ww1037829" class="Code">	wire or_result;</pre><pre id="ww1037830" class="Code">	wire keep1/* synthesis syn_keep=1 */;</pre><pre id="ww1037831" class="Code">	wire keep2/* synthesis syn_keep=1 */;</pre><pre id="ww1037832" class="Code">&nbsp;</pre><pre id="ww1037833" class="Code">	always @(posedge clk)</pre><pre id="ww1037834" class="Code">		begin</pre><pre id="ww1037835" class="Code">			temp1 = a;</pre><pre id="ww1037836" class="Code">			temp2 = b;		</pre><pre id="ww1037837" class="Code">		end</pre><pre id="ww1037838" class="Code">	assign or_result = (temp1 | temp2);</pre><pre id="ww1037839" class="Code">	assign keep1 = or_result;</pre><pre id="ww1037840" class="Code">	assign keep2 = or_result;</pre><pre id="ww1037841" class="Code">	always@(posedge clk)</pre><pre id="ww1037842" class="Code">		begin</pre><pre id="ww1037843" class="Code">			q1 = keep1;</pre><pre id="ww1037844" class="Code">			q2 = keep2;</pre><pre id="ww1037845" class="Code">			</pre><pre id="ww1037846" class="Code">		end</pre><pre id="ww998517" class="Code">endmodule</pre></td></tr></table></div><h5 id="ww998519" class="HeadingRunIn"><span></span>VHDL Syntax </h5><p id="ww998520" class="BodyAfterHead"><span></span>attribute syn_keep of object : objectType is true ; </p><p id="ww998521" class="Body"><span></span>where <span style="font-style: italic">object</span> is a single or multiple-bit signal.</p><h5 id="ww998545" class="HeadingRunIn"><span></span>VHDL Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1037859" class="Code">library ieee;</pre><pre id="ww1037860" class="Code">use ieee.std_logic_1164.all;</pre><pre id="ww1037861" class="Code">&nbsp;</pre><pre id="ww1037862" class="Code">entity syn_keep1 is </pre><pre id="ww1037863" class="Code">	port(</pre><pre id="ww1037864" class="Code">		a : in std_logic;</pre><pre id="ww1037865" class="Code">		b : in std_logic;</pre><pre id="ww1037866" class="Code">		clk: in std_logic;</pre><pre id="ww1037867" class="Code">		q1: out std_logic;</pre><pre id="ww1037868" class="Code">		q2: out std_logic</pre><pre id="ww1037869" class="Code">		);</pre><pre id="ww1037870" class="Code">end entity;</pre><pre id="ww1037871" class="Code">&nbsp;</pre><pre id="ww1037872" class="Code">architecture behave of syn_keep1 is </pre><pre id="ww1037873" class="Code">	signal temp1 : std_logic;</pre><pre id="ww1037874" class="Code">	signal temp2 : std_logic;</pre><pre id="ww1037875" class="Code">	signal keep1 : std_logic;</pre><pre id="ww1037876" class="Code">	signal keep2 : std_logic;</pre><pre id="ww1037877" class="Code">	signal or_result : std_logic;</pre><pre id="ww1037878" class="Code">	attribute syn_keep: boolean;</pre><pre id="ww1037879" class="Code">	attribute syn_keep of keep1,keep2: signal is true;</pre><pre id="ww1037880" class="Code">begin</pre><pre id="ww1037881" class="Code">	process(clk)</pre><pre id="ww1037882" class="Code">	begin</pre><pre id="ww1037883" class="Code">		if clk'event and clk = '1' then </pre><pre id="ww1037884" class="Code">			temp1 &lt;= a;</pre><pre id="ww1037885" class="Code">			temp2 &lt;= b;		</pre><pre id="ww1037886" class="Code">		end if;	</pre><pre id="ww1037887" class="Code">	end process;</pre><pre id="ww1037888" class="Code">	</pre><pre id="ww1037889" class="Code">	or_result &lt;= (temp1 or temp2);</pre><pre id="ww1037890" class="Code">	keep1 &lt;= or_result;</pre><pre id="ww1037891" class="Code">	keep2 &lt;= or_result;</pre><pre id="ww1037892" class="Code">	</pre><pre id="ww1037893" class="Code">	process(clk)</pre><pre id="ww1037894" class="Code">	begin</pre><pre id="ww1037895" class="Code">		if clk'event and clk = '1' then</pre><pre id="ww1037896" class="Code">			q1 &lt;= keep1;</pre><pre id="ww1037897" class="Code">			q2 &lt;= keep2;		</pre><pre id="ww1037898" class="Code">		end if;		</pre><pre id="ww1037899" class="Code">	end process;	</pre><pre id="ww1037900" class="Code">&nbsp;</pre><pre id="ww998544" class="Code">end behave;</pre></td></tr></table></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>