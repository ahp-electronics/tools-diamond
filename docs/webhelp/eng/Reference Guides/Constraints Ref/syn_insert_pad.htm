<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>syn_insert_pad</title><link rel="Prev" href="syn_hier_hdl_attribute.htm" title="Previous" /><link rel="Next" href="syn_keep_hdl_directive.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/lse_constraints_directives.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pPWIoTd5VZ30mzrjlwP8edQ" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Constraints%20Ref/syn_insert_pad.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Constraints_Reference_Guide.htm#1015227">Constraints Reference Guide</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="lattice_synthesis_engine_constraints.htm#1015227">Lattice Synthesis Engine (LSE) Constraints</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="HDL%20Attributes%20and%20Directives.htm#1015227">Lattice Synthesis Engine-Supported HDL Attributes</a> &gt; syn_insert_pad</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1015227" class="Heading3"><span></span>syn_insert_pad</h4><p id="ww1019049" class="BodyAfterHead"><span></span>This attribute removes an existing I/O buffer from a port or net when I/O buffer insertion is enabled.</p><p id="ww1019061" class="Body"><span></span>The syn_insert_pad attribute is used when the use_io_insertion global option is enabled (when I/O buffers are automatically inserted) to allow users to selectively remove an individual buffer from a port or net. </p><p id="ww1019063" class="Body"><span></span>It can also be used to force an I/O buffer to be inserted on a specific port or net, if the use_io_insertion global option is disabled.</p><div id="ww1019065" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>Setting the attribute to 0 on a port or net removes the I/O buffer (or prevents an I/O buffer from being automatically inserted, if the use_io_insertion global option is enabled).</div><div id="ww1019067" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>Setting the attribute to 1 on a port or net forces an I/O buffer to be inserted if the use_io_insertion global option is disabled.</div><h5 id="ww1019069" class="HeadingRunIn"><span></span>Verilog Syntax</h5><p id="ww1019070" class="Body"><span></span>object /* synthesis syn_insert_pad = {1 | 0} */;</p><p id="ww1019071" class="Body"><span></span>where <span style="font-style: italic">object </span>is a port or net declaration.</p><h5 id="ww1019172" class="HeadingRunIn"><span></span>Verilog Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1019191" class="Code">`define OSIZE 16</pre><pre id="ww1019192" class="Code">`define DSIZE 8</pre><pre id="ww1019193" class="Code">&nbsp;</pre><pre id="ww1019194" class="Code">module mac8x8 (dataout, x, y, clk, rst);</pre><pre id="ww1019195" class="Code"> output [`OSIZE:0] dataout;</pre><pre id="ww1019196" class="Code"> input [`DSIZE-1:0] x, y;</pre><pre id="ww1019197" class="Code"> input clk;</pre><pre id="ww1019198" class="Code"> input rst /* synthesis syn_insert_pad = 0 */;</pre><pre id="ww1019199" class="Code"> reg  [`OSIZE:0] dataout;</pre><pre id="ww1019200" class="Code"> reg [`DSIZE-1:0] x_reg, y_reg;</pre><pre id="ww1019201" class="Code"> wire [`OSIZE-1:0] multout ;</pre><pre id="ww1019202" class="Code"> wire [`OSIZE:0] sum_out;</pre><pre id="ww1019203" class="Code">&nbsp;</pre><pre id="ww1019204" class="Code"> assign multout = x_reg * y_reg;</pre><pre id="ww1019205" class="Code"> assign sum_out = multout + dataout;</pre><pre id="ww1019206" class="Code">&nbsp;</pre><pre id="ww1019207" class="Code"> always @(posedge clk or posedge rst)</pre><pre id="ww1019208" class="Code"> begin</pre><pre id="ww1019209" class="Code">   if (rst)</pre><pre id="ww1019210" class="Code">   begin</pre><pre id="ww1019211" class="Code">      x_reg = 0;</pre><pre id="ww1019212" class="Code">      y_reg = 0;</pre><pre id="ww1019213" class="Code">      dataout = 0;</pre><pre id="ww1019214" class="Code">   end</pre><pre id="ww1019215" class="Code">   else</pre><pre id="ww1019216" class="Code">   begin</pre><pre id="ww1019217" class="Code">      x_reg = x;</pre><pre id="ww1019218" class="Code">      y_reg = y;</pre><pre id="ww1019219" class="Code">      dataout = sum_out;</pre><pre id="ww1019220" class="Code">   end</pre><pre id="ww1019221" class="Code"> end</pre><pre id="ww1019222" class="Code">endmodule</pre></td></tr></table></div><p id="ww1019050" class="Body"><span></span>In the previous example, the input port labeled “rst” will not have an input buffer connected to it in the technology-mapped netlist after LSE completes.</p><h5 id="ww1033918" class="HeadingRunIn"><span></span>VHDL Syntax </h5><p id="ww1033919" class="BodyAfterHead"><span></span>attribute syn_insert_pad of object : objectType is "true | false" ;</p><h5 id="ww1033921" class="HeadingRunIn"><span></span>VHDL Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1033985" class="Code">library ieee;</pre><pre id="ww1033986" class="Code">use ieee.std_logic_1164.all;</pre><pre id="ww1033987" class="Code">&nbsp;</pre><pre id="ww1033988" class="Code">entity register_en_reset is </pre><pre id="ww1033989" class="Code">          generic (</pre><pre id="ww1033990" class="Code">                    width : integer := 8</pre><pre id="ww1033991" class="Code">                     );</pre><pre id="ww1033992" class="Code">  port (</pre><pre id="ww1033993" class="Code">    datain  : in std_logic_vector(width-1 downto 0);</pre><pre id="ww1033994" class="Code">    clk     : in std_logic;</pre><pre id="ww1033995" class="Code">    enable  : in std_logic;</pre><pre id="ww1033996" class="Code">    reset   : in std_logic;</pre><pre id="ww1033997" class="Code">    dataout : out std_logic_vector(width-1 downto 0)</pre><pre id="ww1033998" class="Code">    );</pre><pre id="ww1033999" class="Code">  attribute syn_insert_pad : string;</pre><pre id="ww1034000" class="Code">  attribute syn_insert_pad of reset : signal is "false";</pre><pre id="ww1034001" class="Code">&nbsp;</pre><pre id="ww1034002" class="Code">&nbsp;</pre><pre id="ww1034003" class="Code">end register_en_reset;</pre><pre id="ww1034004" class="Code">&nbsp;</pre><pre id="ww1034005" class="Code">architecture lattice_behav of register_en_reset is</pre><pre id="ww1034006" class="Code">&nbsp;</pre><pre id="ww1034007" class="Code">begin</pre><pre id="ww1034008" class="Code">    process (clk,reset)</pre><pre id="ww1034009" class="Code">    begin</pre><pre id="ww1034010" class="Code">      if (reset = '1') then</pre><pre id="ww1034011" class="Code">                      dataout &lt;= (others =&gt; '0');</pre><pre id="ww1034012" class="Code">      elsif (rising_edge(clk) and enable = '1') then</pre><pre id="ww1034013" class="Code">        dataout &lt;= datain;</pre><pre id="ww1034014" class="Code">      end if;</pre><pre id="ww1034015" class="Code">    end process;</pre><pre id="ww1033944" class="Code">end lattice_behav;</pre></td></tr></table></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>