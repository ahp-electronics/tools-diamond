<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>syn_force_pads</title><link rel="Prev" href="syn_encoding_hdl_directive.htm" title="Previous" /><link rel="Next" href="syn_hier_hdl_attribute.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/lse_constraints_directives.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pGIsVQC3bGQBRGnsbIiUT5A" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Constraints%20Ref/syn_force_pads.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Constraints_Reference_Guide.htm#1022604">Constraints Reference Guide</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="lattice_synthesis_engine_constraints.htm#1022604">Lattice Synthesis Engine (LSE) Constraints</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="HDL%20Attributes%20and%20Directives.htm#1022604">Lattice Synthesis Engine-Supported HDL Attributes</a> &gt; syn_force_pads</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1022604" class="Heading3"><span></span>syn_force_pads</h4><p id="ww1022605" class="BodyAfterHead"><span></span>This attribute prevents unused ports from being optimized away to allow I/O pad insertion on the unused port. This attribute is not supported at the global level. Instead, set the use_io_insertion option to control I/O insertion globally. </p><p id="ww1017716" class="BodyAfterHead"><span></span>This attribute is supported in the rtl, and it will override the global use_io_insertion option setting on the given input, output, or bidir port. </p><p id="ww1018041" class="Body"><span></span>For example, in the following Verilog file, the syn_force_pads attribute can be set to 1 on an unused input port (dataz), and it will not be optimized away, regardless of the use_io_insertion global setting.</p><h5 id="ww1034036" class="HeadingRunIn"><span></span>Verilog syntax</h5><p id="ww1034037" class="Body"><span></span>object /* synthesis syn_force_pads = {1 | 0} */;</p><p id="ww1034038" class="Body"><span></span>where object is port declaration.</p><h5 id="ww1018058" class="HeadingRunIn"><span></span>Verilog Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1018884" class="Code">`define DSIZE 9</pre><pre id="ww1018885" class="Code">`define OSIZE 18</pre><pre id="ww1018886" class="Code">&nbsp;</pre><pre id="ww1018887" class="Code">module multp9x9(dataout, dataax, dataay, dataz, clk, rst, ce);</pre><pre id="ww1018888" class="Code">   output [`OSIZE-1:0] dataout;</pre><pre id="ww1018889" class="Code">   input [`DSIZE:0] dataz /* synthesis syn_force_pads = 1*/;</pre><pre id="ww1018890" class="Code">   input [`DSIZE-1:0] dataax, dataay;</pre><pre id="ww1018891" class="Code">   input clk, rst, ce;</pre><pre id="ww1018892" class="Code">   reg  [`DSIZE-1:0] dataax_reg, dataay_reg;</pre><pre id="ww1018893" class="Code">&nbsp;</pre><pre id="ww1018894" class="Code">   reg [`OSIZE-1:0] dataout;</pre><pre id="ww1018895" class="Code">   wire [`OSIZE-1:0] dataout_tmp ;</pre><pre id="ww1018896" class="Code">   assign dataout_tmp = dataax_reg * dataay_reg;</pre><pre id="ww1018897" class="Code">&nbsp;</pre><pre id="ww1018898" class="Code">   always @(posedge clk or posedge rst)</pre><pre id="ww1018899" class="Code">   begin</pre><pre id="ww1018900" class="Code">     if (rst)</pre><pre id="ww1018901" class="Code">     begin</pre><pre id="ww1018902" class="Code">         dataax_reg &lt;= 0;</pre><pre id="ww1018903" class="Code">         dataay_reg &lt;= 0;</pre><pre id="ww1018904" class="Code">         dataout &lt;= 0;</pre><pre id="ww1018905" class="Code">     end</pre><pre id="ww1018906" class="Code">     else if (ce == 1'b1)</pre><pre id="ww1018907" class="Code">     begin</pre><pre id="ww1018908" class="Code">         dataax_reg &lt;= dataax;</pre><pre id="ww1018909" class="Code">         dataay_reg &lt;= dataay;</pre><pre id="ww1018910" class="Code">         dataout &lt;= dataout_tmp;</pre><pre id="ww1018911" class="Code">     end</pre><pre id="ww1018912" class="Code">   end</pre><pre id="ww1018913" class="Code">endmodule</pre></td></tr></table></div><p id="ww1018933" class="Body"><span></span>To force I/O pads to be inserted for input ports that do not drive logic, follow the guidelines below. </p><div id="ww1018937" class="Bulleted"><span class="WebWorks_Number" style="width: 16.56pt"><span><img src="../square.png" alt="*" border="0" width="7" height="7" /></span></span>To force I/O pad insertion on an individual port, set the syn_force_pads attribute on the port with a value to 1. To disable I/O insertion for a port, set the attribute on the port with a value of 0.</div><p id="ww1018939" class="Body"><span></span>Enable this attribute to preserve user-instantiated pads, insert pads on unconnected ports, insert bi-directional pads on bi-directional ports instead of converting them to input ports, or insert output pads on unconnected outputs.</p><p id="ww1018941" class="Body"><span></span>If you do not set the syn_force_pads attribute, the synthesis design optimizes any unconnected I/O buffers away.</p><h5 id="ww1034057" class="HeadingRunIn"><span></span>VHDL syntax</h5><p id="ww1034058" class="Body"><span></span>Attribute syn_force_pads of object: objectType is "true | false" ;</p><h5 id="ww1033825" class="HeadingRunIn"><span></span>VHDL Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1033859" class="Code">library ieee;</pre><pre id="ww1033860" class="Code">use ieee.std_logic_1164.all;</pre><pre id="ww1033861" class="Code">use ieee.std_logic_arith.all;</pre><pre id="ww1033862" class="Code">use ieee.std_logic_unsigned.all;</pre><pre id="ww1033863" class="Code">&nbsp;</pre><pre id="ww1033864" class="Code">entity multp9x9 is</pre><pre id="ww1033865" class="Code">  port ( dataout : out std_logic_vector(17 downto 0);</pre><pre id="ww1033866" class="Code">      dataax, dataay: in std_logic_vector( 8 downto 0);</pre><pre id="ww1033867" class="Code">           dataz : in std_logic_vector(8 downto 0);</pre><pre id="ww1033868" class="Code">           clk,rst,ce: in std_logic</pre><pre id="ww1033869" class="Code">    );</pre><pre id="ww1033870" class="Code">  attribute syn_force_pads : string;</pre><pre id="ww1033871" class="Code">  attribute syn_force_pads of dataz : signal is "true";</pre><pre id="ww1033872" class="Code">&nbsp;</pre><pre id="ww1033873" class="Code">end multp9x9;</pre><pre id="ww1033874" class="Code">&nbsp;</pre><pre id="ww1033875" class="Code">architecture rtl of multp9x9 is </pre><pre id="ww1033876" class="Code">&nbsp;</pre><pre id="ww1033877" class="Code">signal dataax_reg,dataay_reg: std_logic_vector(8 downto 0);</pre><pre id="ww1033878" class="Code">signal dataout_tmp: std_logic_vector(17 downto 0);</pre><pre id="ww1033879" class="Code">&nbsp;</pre><pre id="ww1033880" class="Code">begin</pre><pre id="ww1033881" class="Code">&nbsp;</pre><pre id="ww1033882" class="Code">  dataout_tmp &lt;= dataax_reg * dataay_reg;</pre><pre id="ww1033883" class="Code">  process (clk, rst)</pre><pre id="ww1033884" class="Code">  begin </pre><pre id="ww1033885" class="Code">      if rst = '1' then </pre><pre id="ww1033886" class="Code">           dataax_reg &lt;= (others =&gt; '0');</pre><pre id="ww1033887" class="Code">           dataay_reg &lt;= (others =&gt; '0');</pre><pre id="ww1033888" class="Code">           dataout &lt;= (others =&gt; '0');</pre><pre id="ww1033889" class="Code">      elsif clk'event and clk = '1' then</pre><pre id="ww1033890" class="Code">        if ce = '1' then </pre><pre id="ww1033891" class="Code">           dataax_reg &lt;= dataax;</pre><pre id="ww1033892" class="Code">           dataay_reg &lt;= dataay;</pre><pre id="ww1033893" class="Code">           dataout &lt;= dataout_tmp;</pre><pre id="ww1033894" class="Code">      end if;</pre><pre id="ww1033895" class="Code">      end if;</pre><pre id="ww1033896" class="Code">  end process;</pre><pre id="ww1033897" class="Code">&nbsp;</pre><pre id="ww1033898" class="Code">end rtl;</pre></td></tr></table></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>