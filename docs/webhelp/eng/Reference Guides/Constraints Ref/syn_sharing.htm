<!DOCTYPE html ><html xml:lang="en" lang="en" data-highlight-require-whitespace="false" xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><title>syn_sharing</title><link rel="Prev" href="syn_srlstyle.htm" title="Previous" /><link rel="Next" href="syn_state_machine.htm" title="Next" /><link rel="StyleSheet" href="../../css/font-awesome/css/font-awesome.css" type="text/css" media="all" /><link rel="StyleSheet" href="css/lse_constraints_directives.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/webworks.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/skin.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/social.css" type="text/css" media="all" /><link rel="StyleSheet" href="../css/print.css" type="text/css" media="print" /><script type="text/javascript" src="../scripts/common.js"></script><script type="text/javascript" src="../scripts/page.js"></script><script type="text/javascript" src="../scripts/search-client.js"></script><script type="text/javascript" src="../scripts/unidata.js"></script><script type="text/javascript" src="../scripts/unibreak.js"></script><noscript><div id="noscript_padding"></div></noscript></head><body id="pYYMUVW3vPwbgtmWAui1ARg" class="ww_skin_page_body" onload="Page.OnLoad('../../index.htm#page/Reference%20Guides/Constraints%20Ref/syn_sharing.htm');"><div id="ww_content_container"><header id="wwconnect_header"><div class="ww_skin_page_toolbar"><a class="ww_behavior_print ww_skin ww_skin_print" title="Print" href="#"><i class="fa"></i></a></div><!-- was this helpful button --><!--                         --><!-- Moved breadcrumbs to bottom of the header so that the print --><!-- button would float to the right of the breadcrumbs. --><!-- PH 4June2019 --><div class="ww_skin_breadcrumbs"><a class="WebWorks_Breadcrumb_Link" href="../Strategies/strategy_settings.htm">Reference Guides</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="Constraints_Reference_Guide.htm#1022943">Constraints Reference Guide</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="lattice_synthesis_engine_constraints.htm#1022943">Lattice Synthesis Engine (LSE) Constraints</a> &gt; <a class="WebWorks_Breadcrumb_Link" href="HDL%20Attributes%20and%20Directives.htm#1022943">Lattice Synthesis Engine-Supported HDL Attributes</a> &gt; syn_sharing</div></header><div id="page_content_container" style="background-color: White; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px"><div id="page_content"><h4 id="ww1022943" class="Heading3"><span></span>syn_sharing</h4><p id="ww1022975" class="BodyAfterHead"><span></span>Directive. Enables or disables the sharing of operator resources during the compilation stage of synthesis.</p><p id="ww1022995" class="Body"><span></span>The syn_sharing directive controls resource sharing during the compilation stage of synthesis. This is a compiler-specific optimization that does not affect the mapper; this means that the mapper might still perform resource sharing optimizations to improve timing, even if syn_sharing is disabled.</p><p id="ww1022991" class="Body"><span></span>If you disable resource sharing globally, you can use the syn_sharing directive to turn on resource sharing for specific modules or architectures.</p><h5 id="ww1023014" class="HeadingRunIn"><span></span>Verilog Syntax</h5><p id="ww1023015" class="Body"><span></span>object /* synthesis syn_sharing=”on | off” */ ; </p><h5 id="ww1023042" class="HeadingRunIn"><span></span>Verilog Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1038225" class="Code">module syn_sharing1 (</pre><pre id="ww1038226" class="Code">					input [7:0] inA1,</pre><pre id="ww1038227" class="Code">					input [7:0] inA2,</pre><pre id="ww1038228" class="Code">					input [7:0] inB1,</pre><pre id="ww1038229" class="Code">					input [7:0] inB2,</pre><pre id="ww1038230" class="Code">					input clk,</pre><pre id="ww1038231" class="Code">					input sel1,</pre><pre id="ww1038232" class="Code">					input sel2,</pre><pre id="ww1038233" class="Code">					input rst,</pre><pre id="ww1038234" class="Code">					output [15:0] product1,</pre><pre id="ww1038235" class="Code">					output [15:0] product2</pre><pre id="ww1038236" class="Code">					)/*synthesis syn_sharing = 1*/;</pre><pre id="ww1038237" class="Code">					</pre><pre id="ww1038238" class="Code">	reg [15:0] product1,product2;</pre><pre id="ww1038239" class="Code">	wire [15:0] temp1,temp2;</pre><pre id="ww1038240" class="Code">	assign temp1 = inA1*inB1;</pre><pre id="ww1038241" class="Code">	assign temp2 = inA2*inB2;</pre><pre id="ww1038242" class="Code">	always@(posedge clk)</pre><pre id="ww1038243" class="Code">		begin</pre><pre id="ww1038244" class="Code">			if(sel1)</pre><pre id="ww1038245" class="Code">				begin</pre><pre id="ww1038246" class="Code">					if (sel2)</pre><pre id="ww1038247" class="Code">						product1 = temp1;</pre><pre id="ww1038248" class="Code">					else</pre><pre id="ww1038249" class="Code">						product1 = temp2;</pre><pre id="ww1038250" class="Code">				end</pre><pre id="ww1038251" class="Code">			else</pre><pre id="ww1038252" class="Code">				begin</pre><pre id="ww1038253" class="Code">					if (sel2)</pre><pre id="ww1038254" class="Code">						product2 = temp1;</pre><pre id="ww1038255" class="Code">					else</pre><pre id="ww1038256" class="Code">						product2 = temp2;					</pre><pre id="ww1038257" class="Code">				end			</pre><pre id="ww1038258" class="Code">		end</pre><pre id="ww1023047" class="Code">endmodule</pre></td></tr></table></div><h5 id="ww1023097" class="HeadingRunIn"><span></span>VHDL Syntax</h5><p id="ww1023098" class="Body"><span></span>attribute syn_sharing of object : objectType is “true | false” ;</p><h5 id="ww1023127" class="HeadingRunIn"><span></span>VHDL Example</h5><div class="ww_skin_page_overflow"><table class="Code" cellspacing="0" summary=""><tr><td style="background-color: White; border-bottom-color: #E5E5E5; border-bottom-style: solid; border-bottom-width: 1px; border-left-style: none; border-right-color: #E5E5E5; border-right-style: solid; border-right-width: 0px; border-top-color: #a0a0a0; border-top-style: none; border-top-width: 1.0pt; padding-bottom: 4px; padding-left: 4px; padding-right: 4px; padding-top: 4px; vertical-align: top; width: 342pt"><pre id="ww1038271" class="Code">library ieee;</pre><pre id="ww1038272" class="Code">use ieee.std_logic_1164.all;</pre><pre id="ww1038273" class="Code">use ieee.std_logic_unsigned.all;</pre><pre id="ww1038274" class="Code">&nbsp;</pre><pre id="ww1038275" class="Code">entity syn_sharing2 is </pre><pre id="ww1038276" class="Code">	port(</pre><pre id="ww1038277" class="Code">		inA1 : in std_logic_vector(7 downto 0);</pre><pre id="ww1038278" class="Code">		inA2 : in std_logic_vector(7 downto 0);</pre><pre id="ww1038279" class="Code">		inB1 : in std_logic_vector(7 downto 0);</pre><pre id="ww1038280" class="Code">		inB2 : in std_logic_vector(7 downto 0);</pre><pre id="ww1038281" class="Code">		clk  : in std_logic;</pre><pre id="ww1038282" class="Code">		sel1 : in std_logic;</pre><pre id="ww1038283" class="Code">		sel2 : in std_logic;</pre><pre id="ww1038284" class="Code">		rst  : in std_logic;</pre><pre id="ww1038285" class="Code">		product1 : out std_logic_vector(15 downto 0);</pre><pre id="ww1038286" class="Code">		product2 : out std_logic_vector(15 downto 0)</pre><pre id="ww1038287" class="Code">		);</pre><pre id="ww1038288" class="Code">end entity;</pre><pre id="ww1038289" class="Code">&nbsp;</pre><pre id="ww1038290" class="Code">architecture behave of syn_sharing2 is </pre><pre id="ww1038291" class="Code"> signal temp1,temp2: std_logic_vector(15 downto 0);</pre><pre id="ww1038292" class="Code"> attribute syn_sharing : boolean;</pre><pre id="ww1038293" class="Code"> attribute syn_sharing of behave : architecture is false;</pre><pre id="ww1038294" class="Code">begin</pre><pre id="ww1038295" class="Code">	temp1 &lt;= inA1*inB1;</pre><pre id="ww1038296" class="Code">	temp2 &lt;= inA2*inB2;</pre><pre id="ww1038297" class="Code">	process(clk)</pre><pre id="ww1038298" class="Code">	begin</pre><pre id="ww1038299" class="Code">		if clk'event and clk ='1' then</pre><pre id="ww1038300" class="Code">			if sel1 = '1' then </pre><pre id="ww1038301" class="Code">				if sel2 = '1' then</pre><pre id="ww1038302" class="Code">					product1 &lt;= temp1;</pre><pre id="ww1038303" class="Code">				else </pre><pre id="ww1038304" class="Code">					product1 &lt;= temp2;</pre><pre id="ww1038305" class="Code">				end if;</pre><pre id="ww1038306" class="Code">			else </pre><pre id="ww1038307" class="Code">				if sel2 = '1' then</pre><pre id="ww1038308" class="Code">					product2 &lt;= temp1;</pre><pre id="ww1038309" class="Code">				else </pre><pre id="ww1038310" class="Code">					product2 &lt;= temp2;</pre><pre id="ww1038311" class="Code">				end if;</pre><pre id="ww1038312" class="Code">			</pre><pre id="ww1038313" class="Code">			end if;		</pre><pre id="ww1038314" class="Code">		end if;</pre><pre id="ww1038315" class="Code">	end process;</pre><pre id="ww1033539" class="Code">end behave;</pre></td></tr></table></div></div><div id="page_dates"><div class="ww_skin_page_publish_date"></div></div><!-- Related Topics --><!--                --><footer><!-- Disqus --><!--        --><!-- Google Translation --><!--                    --><br /></footer></div></div><noscript><div id="noscript_warning">This site works best with JavaScript enabled</div></noscript></body></html>